Active code page: 65001

Verifying git installation...
==========================
Red Discord Bot - Launcher
==========================

1. Run Red /w autorestart in case of issues
2. Run Red
3. Update
4. Install requirements
5. Maintenance (repair, reset...)

0. Quit
> ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002520E8332B0>
[2019-05-08_03:47:45]--------------------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-08_03:47:46]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-08_03:47:46]--------------------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-08_03:47:46]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
Login successful. (4.900634ms)

-----------------
Red - Discord Bot
-----------------
Greedie_Bot#9528

Connected to:
2 servers
33 channels
12 users

Prefix: `
Owner: Greedy#2233
11/17 active cogs with 76 commands
-----------------

Use this url to bring your bot to a server:
https://discordapp.com/oauth2/authorize?client_id=335349901275824131&scope=bot

Official server: https://discord.gg/red
Make sure to keep your bot updated. Select the 'Update' option from the launcher.
[2019-05-08_03:48:22]--------------------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config

initializing wallpaper scheduler
scheduling server: 225351701505376257 everybdy_hates_chwis
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
scheduling server: 266047323166081024 greedy_dev
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
saving dailypost settings: 225351701505376257 everybdy_hates_chwis
saving dailypost settings: 266047323166081024 greedy_dev
Saving DailyPostBot config
saving gif bot settings: 225351701505376257 everybdy_hates_chwis
saving gif bot settings: 266047323166081024 greedy_dev
Saving GIFBot config
saving wallpaper settings and categories: 225351701505376257 everybdy_hates_chwis
saving wallpaper settings and categories: 266047323166081024 greedy_dev
Saving WallpaperBot config
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002520E833B00>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D77B765198>
[2019-05-08_03:51:20]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-08_03:51:20]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-08_03:51:20]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-08_03:51:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
Login successful. (3.081248ms)

-----------------
Red - Discord Bot
-----------------
Greedie_Bot#9528

Connected to:
2 servers
33 channels
12 users

Prefix: `
Owner: Greedy#2233
11/17 active cogs with 76 commands
-----------------

Use this url to bring your bot to a server:
https://discordapp.com/oauth2/authorize?client_id=335349901275824131&scope=bot

Official server: https://discord.gg/red
Make sure to keep your bot updated. Select the 'Update' option from the launcher.
[2019-05-08_03:51:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config

initializing wallpaper scheduler
scheduling server: 225351701505376257 everybdy_hates_chwis
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
scheduling server: 266047323166081024 greedy_dev
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:websockets.protocol:Failing the WebSocket connection: 1006 
INFO:apscheduler.executors.default:Running job "Wallpaper.post_auto (trigger: cron[hour='13', minute='0'], next run at: 2019-05-09 13:00:00 MDT)" (scheduled at 2019-05-08 13:00:00-06:00)
[13:00:00]----------AUTO WP POST--------------------
posting to:
server:  266047323166081024   name: greedy_dev
channel: 266047323166081024   name: dev
server categories: []
Exception: 'NoneType' object has no attribute 'keys'
Traceback (most recent call last):
  File "D:\Documents\Code\python\Greedie_Bot\cogs\wallpaper.py", line 303, in post_auto
    row = self.get_read_image(csr_read, server_cats)    # get random image
  File "D:\Documents\Code\python\Greedie_Bot\cogs\wallpaper.py", line 368, in get_read_image
    print('read db, columns  : ' + str(row.keys()))
AttributeError: 'NoneType' object has no attribute 'keys'
INFO:apscheduler.executors.default:Job "Wallpaper.post_auto (trigger: cron[hour='13', minute='0'], next run at: 2019-05-09 13:00:00 MDT)" executed successfully
D:\dev\Python\Python36\lib\selectors.py:327: RuntimeWarning: coroutine 'Bot.send_message' was never awaited
  w = set(w)
INFO:apscheduler.executors.default:Running job "Wallpaper.post_auto (trigger: cron[hour='18', minute='0'], next run at: 2019-05-09 18:00:00 MDT)" (scheduled at 2019-05-08 18:00:00-06:00)
[18:00:00]----------AUTO WP POST--------------------
posting to:
server:  225351701505376257   name: everybdy_hates_chwis
channel: 367824417398718464   name: wallpaper_chwis
server categories: ['Anime Scenery']
read db, columns  : ['id', 'CategoryId', 'Path', 'Filename', 'CategoryName']
read db, retrieved: [3736, 6, 'D:\\Pictures\\Anime Scenery\\Anime\\Kyoukai no Kanata', "[Mori] Kyoukai no Kanata Movie - I'll Be Here - Mirai-hen [1080p FLAC][F6D75B1B].mkv_snapshot_01.15.03_[2017.07.10_05.05.58].png", 'Anime Scenery']
checkrow type: <class 'NoneType'>
TRY #0, image not a duplicate, posting
writerow: [3736, 6, 'Anime Scenery', 'D:\\Pictures\\Anime Scenery\\Anime\\Kyoukai no Kanata', "[Mori] Kyoukai no Kanata Movie - I'll Be Here - Mirai-hen [1080p FLAC][F6D75B1B].mkv_snapshot_01.15.03_[2017.07.10_05.05.58].png", 1]
filepath: D:\Pictures\Anime Scenery\Anime\Kyoukai no Kanata\[Mori] Kyoukai no Kanata Movie - I'll Be Here - Mirai-hen [1080p FLAC][F6D75B1B].mkv_snapshot_01.15.03_[2017.07.10_05.05.58].png
posted image: D:\Pictures\Anime Scenery\Anime\Kyoukai no Kanata\[Mori] Kyoukai no Kanata Movie - I'll Be Here - Mirai-hen [1080p FLAC][F6D75B1B].mkv_snapshot_01.15.03_[2017.07.10_05.05.58].png
saved posted image to writeDB
INFO:apscheduler.executors.default:Job "Wallpaper.post_auto (trigger: cron[hour='18', minute='0'], next run at: 2019-05-09 18:00:00 MDT)" executed successfully
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D77B7659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000229E76C5198>
[2019-05-08_18:17:49]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-08_18:17:49]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-08_18:17:49]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-08_18:17:50]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[08/05/2019 18:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000229E76C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F1473E6128>
[2019-05-09_18:39:24]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-09_18:39:24]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-09_18:39:24]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-09_18:39:24]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
Login successful. (3.257942ms)

-----------------
Red - Discord Bot
-----------------
Greedie_Bot#9528

Connected to:
2 servers
33 channels
12 users

Prefix: `
Owner: Greedy#2233
11/17 active cogs with 76 commands
-----------------

Use this url to bring your bot to a server:
https://discordapp.com/oauth2/authorize?client_id=335349901275824131&scope=bot

Official server: https://discord.gg/red
Make sure to keep your bot updated. Select the 'Update' option from the launcher.
[2019-05-09_18:39:47]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config

initializing wallpaper scheduler
scheduling server: 225351701505376257 everybdy_hates_chwis
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
scheduling server: 266047323166081024 greedy_dev
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
--------------------Chatbot message--------------------
INFO:chatterbot.chatterbot:Beginning search for close text match
INFO:chatterbot.chatterbot:Processing search results
INFO:chatterbot.chatterbot:Similar text found: That isn't my name, but it is a useful way to refer to me. 0.07
INFO:chatterbot.chatterbot:Similar text found: It is a computer 0.11
INFO:chatterbot.chatterbot:Similar text found: What is it like being a computer 0.12
INFO:chatterbot.chatterbot:Similar text found: What kind of computer 0.17
INFO:chatterbot.chatterbot:Similar text found: What is a computer? 0.19
INFO:chatterbot.chatterbot:Similar text found: Hi 1.0
INFO:chatterbot.chatterbot:Using "Hi" as a close match to "hi" with a confidence of 1.0
INFO:chatterbot.chatterbot:0. Excluding recent repeated response of "hi"
INFO:chatterbot.chatterbot:Selecting response from 2 optimal responses.
INFO:chatterbot.response_selection:Selecting first response from list of 2 options.
INFO:chatterbot.chatterbot:Response selected. Using "How are you doing?"
INFO:chatterbot.chatterbot:BestMatch selected "How are you doing?" as a response with a confidence of 1.0
INFO:chatterbot.chatterbot:Adding "hi" as a response to "@everyone MINING?"
message content: <@335349901275824131> hi
editted content:  hi
[18:39:55] <@335349901275824131> hi | How are you doing?
--------------------Chatbot message--------------------
INFO:chatterbot.chatterbot:Beginning search for close text match
INFO:chatterbot.chatterbot:Processing search results
INFO:chatterbot.chatterbot:Similar text found: That isn't my name, but it is a useful way to refer to me. 0.07
INFO:chatterbot.chatterbot:Similar text found: It is a computer 0.11
INFO:chatterbot.chatterbot:Similar text found: What is it like being a computer 0.12
INFO:chatterbot.chatterbot:Similar text found: What kind of computer 0.17
INFO:chatterbot.chatterbot:Similar text found: What is a computer? 0.19
INFO:chatterbot.chatterbot:Similar text found: Hi 1.0
INFO:chatterbot.chatterbot:Using "Hi" as a close match to "hi" with a confidence of 1.0
INFO:chatterbot.chatterbot:0. Excluding recent repeated response of "hi"
INFO:chatterbot.chatterbot:Selecting response from 2 optimal responses.
INFO:chatterbot.response_selection:Selecting first response from list of 2 options.
INFO:chatterbot.chatterbot:Response selected. Using "How are you doing?"
INFO:chatterbot.chatterbot:BestMatch selected "How are you doing?" as a response with a confidence of 1.0
INFO:chatterbot.chatterbot:Adding "hi" as a response to "hi"
message content: <@335349901275824131> hi
editted content:  hi
[04:07:51] <@335349901275824131> hi | How are you doing?
INFO:apscheduler.executors.default:Running job "Wallpaper.post_auto (trigger: cron[hour='13', minute='0'], next run at: 2019-05-11 13:00:00 MDT)" (scheduled at 2019-05-10 13:00:00-06:00)
[13:00:00]----------AUTO WP POST--------------------
posting to:
server:  266047323166081024   name: greedy_dev
channel: 266047323166081024   name: dev
server categories: []
Exception: 'NoneType' object has no attribute 'keys'
Traceback (most recent call last):
  File "D:\Documents\Code\python\Greedie_Bot\cogs\wallpaper.py", line 303, in post_auto
    row = self.get_read_image(csr_read, server_cats)    # get random image
  File "D:\Documents\Code\python\Greedie_Bot\cogs\wallpaper.py", line 368, in get_read_image
    print('read db, columns  : ' + str(row.keys()))
AttributeError: 'NoneType' object has no attribute 'keys'
INFO:apscheduler.executors.default:Job "Wallpaper.post_auto (trigger: cron[hour='13', minute='0'], next run at: 2019-05-11 13:00:00 MDT)" executed successfully
[2019-05-10_16:59:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config

initializing wallpaper scheduler
scheduling server: 225351701505376257 everybdy_hates_chwis
D:\dev\Python\Python36\lib\selectors.py:326: RuntimeWarning: coroutine 'Bot.send_message' was never awaited
  r = set(r)
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
scheduling server: 266047323166081024 greedy_dev
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:apscheduler.executors.default:Running job "Wallpaper.post_auto (trigger: cron[hour='18', minute='0'], next run at: 2019-05-11 18:00:00 MDT)" (scheduled at 2019-05-10 18:00:00-06:00)
[18:00:00]----------AUTO WP POST--------------------
posting to:
server:  225351701505376257   name: everybdy_hates_chwis
channel: 367824417398718464   name: wallpaper_chwis
server categories: ['Anime Scenery']
read db, columns  : ['id', 'CategoryId', 'Path', 'Filename', 'CategoryName']
read db, retrieved: [4419, 6, 'D:\\Pictures\\Anime Scenery\\artist\\pixiv\\???', '20703519_p0.png', 'Anime Scenery']
checkrow type: <class 'NoneType'>
TRY #0, image not a duplicate, posting
INFO:apscheduler.executors.default:Running job "Wallpaper.post_auto (trigger: cron[hour='18', minute='0'], next run at: 2019-05-11 18:00:00 MDT)" (scheduled at 2019-05-10 18:00:00-06:00)
[18:00:00]----------AUTO WP POST--------------------
posting to:
server:  225351701505376257   name: everybdy_hates_chwis
channel: 367824417398718464   name: wallpaper_chwis
server categories: ['Anime Scenery']
read db, columns  : ['id', 'CategoryId', 'Path', 'Filename', 'CategoryName']
read db, retrieved: [4801, 6, 'D:\\Pictures\\Anime Scenery\\Sky\\Sky', '1344507345207.jpg', 'Anime Scenery']
checkrow type: <class 'NoneType'>
TRY #0, image not a duplicate, posting
writerow: [4419, 6, 'Anime Scenery', 'D:\\Pictures\\Anime Scenery\\artist\\pixiv\\???', '20703519_p0.png', 1]
filepath: D:\Pictures\Anime Scenery\artist\pixiv\???\20703519_p0.png
writerow: [4801, 6, 'Anime Scenery', 'D:\\Pictures\\Anime Scenery\\Sky\\Sky', '1344507345207.jpg', 1]
Exception: database is locked
Traceback (most recent call last):
  File "D:\Documents\Code\python\Greedie_Bot\cogs\wallpaper.py", line 317, in post_auto
    self.insert_image(csr_write, row)  # write image to writeDB
  File "D:\Documents\Code\python\Greedie_Bot\cogs\wallpaper.py", line 397, in insert_image
    csr_write.execute(sql_write, writerow)
sqlite3.OperationalError: database is locked
INFO:apscheduler.executors.default:Job "Wallpaper.post_auto (trigger: cron[hour='18', minute='0'], next run at: 2019-05-11 18:00:00 MDT)" executed successfully
posted image: D:\Pictures\Anime Scenery\artist\pixiv\???\20703519_p0.png
saved posted image to writeDB
INFO:apscheduler.executors.default:Job "Wallpaper.post_auto (trigger: cron[hour='18', minute='0'], next run at: 2019-05-11 18:00:00 MDT)" executed successfully
sys:1: RuntimeWarning: coroutine 'Bot.send_message' was never awaited
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F1473E6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CE99B95198>
[2019-05-10_23:53:14]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:53:14]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:53:15]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:53:15]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CE99B959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000272F6935198>
[2019-05-10_23:53:28]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:53:28]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:53:28]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:53:28]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000272F69359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027CEA736128>
[2019-05-10_23:53:30]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:53:30]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:53:30]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:53:30]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027CEA736978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002240FA45198>
[2019-05-10_23:53:32]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:53:32]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:53:32]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:53:32]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002240FA459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A8D6115198>
[2019-05-10_23:53:34]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:53:34]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:53:34]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:53:34]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A8D61159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002695B675198>
[2019-05-10_23:53:43]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:53:43]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:53:43]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:53:43]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002695B6759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DD17B35198>
[2019-05-10_23:53:45]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:53:45]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:53:45]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:53:45]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DD17B359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002327FF95198>
[2019-05-10_23:53:47]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:53:47]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:53:47]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:53:48]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002327FF959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022837FE5198>
[2019-05-10_23:54:00]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:54:00]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:54:00]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:54:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022837FE59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000014CF93F5198>
[2019-05-10_23:54:02]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:54:02]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:54:02]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:54:03]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000014CF93F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018F9B5B5198>
[2019-05-10_23:54:04]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:54:05]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:54:05]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:54:05]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018F9B5B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023420215198>
[2019-05-10_23:54:18]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:54:18]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:54:18]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:54:18]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000234202159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002B0ADDF5198>
[2019-05-10_23:54:20]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:54:20]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:54:20]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:54:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002B0ADDF59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001691E635198>
[2019-05-10_23:54:22]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:54:22]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:54:22]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:54:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001691E6359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000253544D5198>
[2019-05-10_23:54:35]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:54:35]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:54:35]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:54:35]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000253544D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019F639D5198>
[2019-05-10_23:54:37]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:54:37]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:54:37]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:54:37]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019F639D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000014F2E455198>
[2019-05-10_23:54:39]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:54:39]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:54:39]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:54:40]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000014F2E4559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017DD4035198>
[2019-05-10_23:54:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:54:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:54:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:54:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017DD40359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001963AAA5198>
[2019-05-10_23:54:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:54:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:54:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:54:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001963AAA59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000258CC165198>
[2019-05-10_23:54:57]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:54:57]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:54:57]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:54:57]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000258CC1659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002299A095198>
[2019-05-10_23:54:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:54:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:54:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:54:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002299A0959B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020E7F3A5198>
[2019-05-10_23:55:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:55:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:55:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:55:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020E7F3A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000252EAAD5198>
[2019-05-10_23:55:03]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:55:03]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:55:03]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:55:03]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000252EAAD59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E8D1425198>
[2019-05-10_23:55:05]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:55:05]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:55:05]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:55:06]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E8D14259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024946735198>
[2019-05-10_23:55:07]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:55:07]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:55:07]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:55:08]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000249467359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029DE4C65198>
[2019-05-10_23:55:14]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:55:14]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:55:14]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:55:14]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029DE4C659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027A60075198>
[2019-05-10_23:55:16]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:55:16]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:55:16]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:55:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027A600759B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024890FC5198>
[2019-05-10_23:55:18]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:55:18]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:55:18]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:55:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024890FC59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C864C35198>
[2019-05-10_23:55:31]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:55:31]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:55:31]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:55:32]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C864C359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021C37D75198>
[2019-05-10_23:55:33]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:55:33]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:55:33]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:55:34]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021C37D759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027A4A235198>
[2019-05-10_23:55:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:55:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:55:36]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:55:36]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027A4A2359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BBFD5E5198>
[2019-05-10_23:55:49]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:55:49]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:55:49]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:55:49]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BBFD5E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BE459D5198>
[2019-05-10_23:55:51]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:55:51]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:55:51]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:55:51]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BE459D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029E38BC5198>
[2019-05-10_23:55:53]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:55:53]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:55:53]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:55:53]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029E38BC59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023EB5915198>
[2019-05-10_23:56:06]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:56:06]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:56:06]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:56:06]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023EB59159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CF1E8B5198>
[2019-05-10_23:56:08]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:56:08]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:56:08]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:56:09]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CF1E8B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B6829C5198>
[2019-05-10_23:56:10]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:56:10]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:56:10]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:56:11]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B6829C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022FF8485198>
[2019-05-10_23:56:23]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:56:23]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:56:23]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:56:24]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022FF84859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002250EB95198>
[2019-05-10_23:56:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:56:26]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:56:26]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:56:26]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002250EB959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026FBC8F5198>
[2019-05-10_23:56:28]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:56:28]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:56:28]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:56:28]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026FBC8F59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FE66D35198>
[2019-05-10_23:56:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:56:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:56:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:56:41]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FE66D359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024EFCCA6128>
[2019-05-10_23:56:43]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:56:43]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:56:43]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:56:43]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024EFCCA6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027FFAC86128>
[2019-05-10_23:56:45]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:56:45]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:56:45]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:56:46]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027FFAC86978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002C4B5745198>
[2019-05-10_23:56:58]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:56:58]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:56:58]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:56:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002C4B57459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000224DDE55198>
[2019-05-10_23:57:00]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:57:00]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:57:00]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:57:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000224DDE559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002112CCE5198>
[2019-05-10_23:57:03]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:57:03]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:57:03]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:57:03]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002112CCE59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023F881C5198>
[2019-05-10_23:57:16]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:57:16]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:57:16]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:57:16]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023F881C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020EA4FF5198>
[2019-05-10_23:57:18]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:57:18]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:57:18]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:57:18]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020EA4FF59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002598A985198>
[2019-05-10_23:57:20]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:57:20]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:57:20]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:57:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002598A9859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002110D685198>
[2019-05-10_23:57:33]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:57:33]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:57:33]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:57:34]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002110D6859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000014D1EF85198>
[2019-05-10_23:57:35]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:57:35]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:57:35]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:57:36]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000014D1EF859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002058F485198>
[2019-05-10_23:57:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:57:38]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:57:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:57:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002058F4859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002867A845198>
[2019-05-10_23:57:51]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:57:51]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:57:51]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:57:51]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002867A8459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020A67465198>
[2019-05-10_23:57:53]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:57:53]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:57:53]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:57:53]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020A674659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000287FA505198>
[2019-05-10_23:57:55]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:57:55]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:57:55]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:57:55]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000287FA5059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024190CB5198>
[2019-05-10_23:57:57]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:57:57]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:57:57]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:57:58]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024190CB59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018B442C5198>
[2019-05-10_23:57:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:57:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:57:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:58:00]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018B442C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000011DE7AD5198>
[2019-05-10_23:58:08]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:58:08]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:58:08]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:58:09]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000011DE7AD59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F3FCC35198>
[2019-05-10_23:58:10]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:58:10]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:58:10]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:58:11]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F3FCC359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021882105198>
[2019-05-10_23:58:12]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:58:13]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:58:13]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:58:13]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000218821059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019BB4266128>
[2019-05-10_23:58:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:58:26]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:58:26]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:58:26]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019BB4266978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022A17D05198>
[2019-05-10_23:58:28]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:58:28]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:58:28]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:58:28]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022A17D059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000194B0015198>
[2019-05-10_23:58:30]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:58:30]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:58:30]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:58:30]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000194B00159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025C8B135198>
[2019-05-10_23:58:32]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:58:32]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:58:32]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:58:33]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025C8B1359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017E3FFC5198>
[2019-05-10_23:58:34]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:58:34]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:58:34]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:58:35]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[10/05/2019 23:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017E3FFC59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A28A296128>
[2019-05-10_23:58:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-10_23:58:37]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-10_23:58:37]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-10_23:58:37]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
Login successful. (3.5314449999999997ms)

-----------------
Red - Discord Bot
-----------------
Greedie_Bot#9528

Connected to:
2 servers
33 channels
12 users

Prefix: `
Owner: Greedy#2233
11/17 active cogs with 76 commands
-----------------

Use this url to bring your bot to a server:
https://discordapp.com/oauth2/authorize?client_id=335349901275824131&scope=bot

Official server: https://discord.gg/red
Make sure to keep your bot updated. Select the 'Update' option from the launcher.
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A28A296978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022127CE5198>
[2019-05-11_01:28:58]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:28:58]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:28:58]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:28:58]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:29] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022127CE59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000218871C5198>
[2019-05-11_01:29:34]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:29:34]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:29:34]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:29:34]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:29] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000218871C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018574DD5198>
[2019-05-11_01:29:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:29:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:29:36]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:29:36]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:29] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018574DD59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000260B0385198>
[2019-05-11_01:29:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:29:38]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:29:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:29:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:29] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000260B03859B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000212489B5198>
[2019-05-11_01:29:40]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:29:40]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:29:40]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:29:41]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:29] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000212489B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023A08C65198>
[2019-05-11_01:29:42]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:29:42]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:29:42]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:29:43]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:29] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023A08C659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025908035198>
[2019-05-11_01:29:45]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:29:45]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:29:45]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:29:45]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:29] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000259080359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022A02DF5198>
[2019-05-11_01:29:47]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:29:47]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:29:47]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:29:47]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:29] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022A02DF59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024929DB6128>
[2019-05-11_01:29:49]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:29:49]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:29:49]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:29:49]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:30] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024929DB6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000176F18D5198>
[2019-05-11_01:30:03]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:30:03]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:30:03]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:30:03]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:30] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000176F18D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019A3D806128>
[2019-05-11_01:30:05]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:30:05]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:30:05]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:30:06]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:30] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019A3D806978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002E3EEA75198>
[2019-05-11_01:30:07]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:30:07]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:30:08]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:30:08]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:30] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002E3EEA759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002AC6A645198>
[2019-05-11_01:30:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:30:22]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:30:22]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:30:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:30] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002AC6A6459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000261C66D5198>
[2019-05-11_01:30:24]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:30:24]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:30:24]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:30:24]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:30] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000261C66D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021075CA5198>
[2019-05-11_01:30:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:30:26]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:30:26]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:30:27]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:30] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021075CA59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E04BB55198>
[2019-05-11_01:30:40]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:30:40]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:30:40]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:30:41]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:30] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E04BB559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029839D05198>
[2019-05-11_01:30:42]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:30:42]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:30:42]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:30:43]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:30] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029839D059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F74B335198>
[2019-05-11_01:30:45]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:30:45]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:30:45]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:30:45]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:30] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F74B3359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000243C9825198>
[2019-05-11_01:30:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:30:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:30:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:30:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:30] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000243C98259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000203EE965198>
[2019-05-11_01:31:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:31:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:31:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:31:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:31] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000203EE9659B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029FE1746128>
[2019-05-11_01:31:03]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:31:03]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:31:03]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:31:03]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:31] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029FE1746978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F1E77D5198>
[2019-05-11_01:31:17]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:31:17]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:31:17]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:31:18]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:31] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F1E77D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D0BF8D6128>
[2019-05-11_01:31:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:31:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:31:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:31:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:31] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D0BF8D6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023A43995198>
[2019-05-11_01:31:22]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:31:22]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:31:22]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:31:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:31] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023A439959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002083FDA5198>
[2019-05-11_01:31:24]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:31:24]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:31:24]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:31:24]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:31] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002083FDA59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001852E136128>
[2019-05-11_01:31:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:31:26]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:31:26]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:31:26]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:31] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001852E136978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025A2BC06128>
[2019-05-11_01:31:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:31:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:31:36]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:31:36]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:31] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025A2BC06978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F67CB86128>
[2019-05-11_01:31:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:31:38]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:31:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:31:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:31] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F67CB86978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000221AE086128>
[2019-05-11_01:31:40]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:31:40]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:31:40]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:31:40]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:31] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000221AE086978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DC8DAC6128>
[2019-05-11_01:31:42]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:31:42]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:31:42]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:31:43]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:31] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DC8DAC6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000196DBF46128>
[2019-05-11_01:31:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:31:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:31:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:31:45]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:31] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000196DBF46978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002172C396128>
[2019-05-11_01:31:58]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:31:58]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:31:58]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:31:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:31] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002172C396978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019E05285198>
[2019-05-11_01:32:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:32:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:32:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:32:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:32] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019E052859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022B02C55198>
[2019-05-11_01:32:03]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:32:03]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:32:03]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:32:03]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:32] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022B02C559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000011E3D505198>
[2019-05-11_01:32:17]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:32:17]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:32:17]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:32:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:32] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000011E3D5059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F9D3505198>
[2019-05-11_01:32:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:32:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:32:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:32:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:32] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F9D35059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002145AB15198>
[2019-05-11_01:32:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:32:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:32:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:32:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:32] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002145AB159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EB24386128>
[2019-05-11_01:32:23]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:32:24]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:32:24]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:32:24]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:32] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EB24386978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002175C785198>
[2019-05-11_01:32:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:32:38]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:32:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:32:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:32] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002175C7859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B4CB105198>
[2019-05-11_01:32:40]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:32:40]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:32:40]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:32:40]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:32] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B4CB1059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000013EFE8D5198>
[2019-05-11_01:32:42]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:32:42]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:32:42]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:32:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:32] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000013EFE8D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022EC14A5198>
[2019-05-11_01:32:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:32:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:32:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:32:45]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:32] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022EC14A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002460E536128>
[2019-05-11_01:32:58]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:32:58]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:32:58]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:32:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:32] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002460E536978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001974F835198>
[2019-05-11_01:33:00]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:33:00]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:33:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:33:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001974F8359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EB15445198>
[2019-05-11_01:33:03]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:33:03]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:33:03]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:33:03]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EB154459B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000012C0B1E5198>
[2019-05-11_01:33:17]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:33:17]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:33:17]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:33:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000012C0B1E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022E6A785198>
[2019-05-11_01:33:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:33:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:33:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:33:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022E6A7859B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027FB08A5198>
[2019-05-11_01:33:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:33:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:33:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:33:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027FB08A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002D60D485198>
[2019-05-11_01:33:35]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:33:35]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:33:35]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:33:36]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002D60D4859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020B9F265198>
[2019-05-11_01:33:37]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:33:37]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:33:37]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:33:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020B9F2659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002B3F7F45198>
[2019-05-11_01:33:40]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:33:40]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:33:40]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:33:40]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002B3F7F459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001407AE46128>
[2019-05-11_01:33:42]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:33:42]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:33:42]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:33:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001407AE46978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000013104395198>
[2019-05-11_01:33:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:33:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:33:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:33:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000131043959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002119CBC5198>
[2019-05-11_01:33:54]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:33:54]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:33:54]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:33:54]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002119CBC59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000232EFA05198>
[2019-05-11_01:33:56]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:33:56]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:33:56]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:33:57]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000232EFA059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002C87EED5198>
[2019-05-11_01:33:58]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:33:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:33:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:33:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002C87EED59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002647FFD5198>
[2019-05-11_01:34:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:34:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:34:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:34:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002647FFD59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018D75645198>
[2019-05-11_01:34:03]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:34:03]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:34:03]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:34:03]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018D756459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D8F5C95198>
[2019-05-11_01:34:05]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:34:05]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:34:05]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:34:06]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D8F5C959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AE685A6128>
[2019-05-11_01:34:07]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:34:07]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:34:07]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:34:08]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AE685A6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002D57F625198>
[2019-05-11_01:34:10]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:34:10]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:34:10]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:34:10]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002D57F6259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000288864B6128>
[2019-05-11_01:34:24]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:34:24]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:34:24]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:34:24]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000288864B6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021E05505198>
[2019-05-11_01:34:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:34:26]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:34:26]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:34:26]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021E055059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026F731E5198>
[2019-05-11_01:34:28]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:34:28]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:34:28]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:34:29]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026F731E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A317865198>
[2019-05-11_01:34:42]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:34:42]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:34:42]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:34:43]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A3178659B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E0C6BA5198>
[2019-05-11_01:34:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:34:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:34:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:34:45]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E0C6BA59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001679F485198>
[2019-05-11_01:34:47]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:34:47]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:34:47]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:34:47]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001679F4859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C84B985198>
[2019-05-11_01:35:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:35:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:35:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:35:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:35] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C84B9859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002D407AD6128>
[2019-05-11_01:35:03]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:35:03]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:35:03]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:35:03]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 01:35] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002D407AD6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017DCB375198>
[2019-05-11_01:35:05]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_01:35:05]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_01:35:05]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_01:35:06]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
Login successful. (4.375241ms)

-----------------
Red - Discord Bot
-----------------
Greedie_Bot#9528

Connected to:
2 servers
33 channels
12 users

Prefix: `
Owner: Greedy#2233
11/17 active cogs with 76 commands
-----------------

Use this url to bring your bot to a server:
https://discordapp.com/oauth2/authorize?client_id=335349901275824131&scope=bot

Official server: https://discord.gg/red
Make sure to keep your bot updated. Select the 'Update' option from the launcher.
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017DCB3759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026BADD15198>
[2019-05-11_07:21:55]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:21:55]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:21:55]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:21:56]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:22] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026BADD159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025574EA5198>
[2019-05-11_07:22:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:22:20]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:22:20]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:22:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:22] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025574EA59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D9B5C15198>
[2019-05-11_07:22:58]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:22:58]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:22:58]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:22:58]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:22] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D9B5C159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000272C5CA5198>
[2019-05-11_07:23:00]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:23:00]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:23:00]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:23:00]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:23] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000272C5CA59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000235D2395198>
[2019-05-11_07:23:02]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:23:02]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:23:02]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:23:02]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:23] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000235D23959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002704E3A5198>
[2019-05-11_07:23:04]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:23:04]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:23:04]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:23:05]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:23] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002704E3A59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F6FB1D5198>
[2019-05-11_07:23:07]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:23:07]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:23:07]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:23:07]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:23] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F6FB1D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002915C135198>
[2019-05-11_07:23:09]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:23:09]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:23:09]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:23:09]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:23] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002915C1359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018AAF195198>
[2019-05-11_07:23:23]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:23:23]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:23:23]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:23:23]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:23] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018AAF1959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C633926128>
[2019-05-11_07:23:25]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:23:25]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:23:25]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:23:25]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:23] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C633926978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024F036C5198>
[2019-05-11_07:23:27]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:23:27]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:23:27]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:23:28]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:23] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024F036C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000237CB6B5198>
[2019-05-11_07:23:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:23:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:23:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:23:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:23] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000237CB6B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000239A8365198>
[2019-05-11_07:23:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:23:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:23:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:23:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:23] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000239A83659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CB4DB75198>
[2019-05-11_07:23:46]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:23:46]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:23:46]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:23:46]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:23] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CB4DB759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E0B0645198>
[2019-05-11_07:24:00]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:24:00]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:24:00]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:24:00]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:24] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E0B06459B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000204AEEA5198>
[2019-05-11_07:24:02]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:24:02]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:24:02]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:24:03]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:24] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000204AEEA59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EAFB065198>
[2019-05-11_07:24:04]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:24:04]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:24:04]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:24:05]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:24] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EAFB0659B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025F33435198>
[2019-05-11_07:24:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:24:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:24:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:24:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:24] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025F334359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000149B5A85198>
[2019-05-11_07:24:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:24:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:24:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:24:21]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:24] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000149B5A859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E9BF755198>
[2019-05-11_07:24:23]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:24:23]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:24:23]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:24:24]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:24] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E9BF7559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021084835198>
[2019-05-11_07:24:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:24:26]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:24:26]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:24:26]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:24] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000210848359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D77B935198>
[2019-05-11_07:24:28]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:24:28]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:24:28]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:24:28]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:24] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D77B9359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C739E25198>
[2019-05-11_07:24:30]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:24:30]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:24:30]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:24:31]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:24] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C739E259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025287785198>
[2019-05-11_07:24:32]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:24:32]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:24:32]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:24:33]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:24] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000252877859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000243DC726128>
[2019-05-11_07:24:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:24:38]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:24:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:24:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:24] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000243DC726978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000166C7E85198>
[2019-05-11_07:24:40]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:24:40]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:24:40]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:24:40]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:24] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000166C7E859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D256895198>
[2019-05-11_07:24:42]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:24:42]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:24:42]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:24:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:24] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D2568959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E8C73A6128>
[2019-05-11_07:24:56]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:24:56]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:24:56]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:24:57]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:24] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E8C73A6940>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F07DEE5198>
[2019-05-11_07:24:58]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:24:58]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:24:58]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:24:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:24] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F07DEE59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A010DC5198>
[2019-05-11_07:25:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:25:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:25:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:25:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:25] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A010DC59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F7353A5198>
[2019-05-11_07:25:15]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:25:15]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:25:15]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:25:15]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:25] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F7353A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025DC5075198>
[2019-05-11_07:25:17]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:25:17]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:25:17]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:25:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:25] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025DC50759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AFB2825198>
[2019-05-11_07:25:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:25:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:25:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:25:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:25] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AFB28259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000249775B5198>
[2019-05-11_07:25:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:25:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:25:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:25:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:25] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000249775B59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FF4C035198>
[2019-05-11_07:25:24]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:25:24]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:25:24]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:25:24]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:25] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FF4C0359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000193EC535198>
[2019-05-11_07:25:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:25:26]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:25:26]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:25:26]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:25] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000193EC5359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001826AE35198>
[2019-05-11_07:25:31]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:25:31]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:25:31]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:25:31]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:25] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001826AE359B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CC6BF35198>
[2019-05-11_07:25:33]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:25:33]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:25:33]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:25:34]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:25] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CC6BF359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000214729F5198>
[2019-05-11_07:25:35]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:25:35]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:25:35]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:25:36]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:25] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000214729F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000155D6445198>
[2019-05-11_07:25:50]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:25:50]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:25:50]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:25:50]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:25] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000155D64459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002994C955198>
[2019-05-11_07:25:52]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:25:52]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:25:52]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:25:52]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:25] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002994C9559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025A9CFE5198>
[2019-05-11_07:25:54]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:25:54]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:25:54]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:25:54]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:25] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025A9CFE59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F5439F6128>
[2019-05-11_07:25:56]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:25:56]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:25:56]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:25:57]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:25] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F5439F6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000201C9795198>
[2019-05-11_07:25:58]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:25:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:25:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:25:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:25] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000201C97959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028A76875198>
[2019-05-11_07:26:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:26:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:26:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:26:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:26] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028A768759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B94E4E6128>
[2019-05-11_07:26:15]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:26:15]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:26:15]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:26:15]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:26] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B94E4E6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002760A205198>
[2019-05-11_07:26:17]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:26:17]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:26:17]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:26:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:26] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002760A2059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E05BC56128>
[2019-05-11_07:26:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:26:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:26:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:26:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:26] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E05BC56978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000152EB595198>
[2019-05-11_07:26:22]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:26:22]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:26:22]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:26:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:26] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000152EB5959B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000238B6BF5198>
[2019-05-11_07:26:24]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:26:24]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:26:24]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:26:24]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:26] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000238B6BF59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000224814C6128>
[2019-05-11_07:26:33]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:26:33]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:26:33]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:26:34]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:26] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000224814C6940>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000248F2205198>
[2019-05-11_07:26:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:26:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:26:36]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:26:36]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:26] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000248F22059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000188A7E75198>
[2019-05-11_07:26:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:26:38]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:26:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:26:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:26] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000188A7E759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CA7FA05198>
[2019-05-11_07:26:52]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:26:52]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:26:52]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:26:52]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:26] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CA7FA059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000200706B6128>
[2019-05-11_07:26:54]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:26:54]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:26:54]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:26:55]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:26] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000200706B6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025A56115198>
[2019-05-11_07:26:56]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:26:57]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:26:57]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:26:57]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:27] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025A561159B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000205F2B55198>
[2019-05-11_07:27:11]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:27:11]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:27:11]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:27:11]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:27] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000205F2B559B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000219DA366128>
[2019-05-11_07:27:13]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:27:13]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:27:13]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:27:13]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:27] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000219DA366978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000011510545198>
[2019-05-11_07:27:15]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:27:15]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:27:15]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:27:15]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:27] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000115105459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D856675198>
[2019-05-11_07:27:29]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:27:29]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:27:29]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:27:30]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:27] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D8566759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000232DB025198>
[2019-05-11_07:27:31]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:27:31]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:27:31]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:27:32]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:27] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000232DB0259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001031D1E5198>
[2019-05-11_07:27:34]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:27:34]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:27:34]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:27:34]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:27] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001031D1E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000016B42C25198>
[2019-05-11_07:27:48]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:27:48]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:27:48]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:27:48]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:27] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000016B42C259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A1F7EB5198>
[2019-05-11_07:27:50]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:27:50]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:27:50]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:27:50]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:27] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A1F7EB59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022565BE5198>
[2019-05-11_07:27:52]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:27:52]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:27:52]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:27:53]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:28] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022565BE59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001416F565198>
[2019-05-11_07:28:06]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:28:06]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:28:06]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:28:07]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:28] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001416F5659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000211CC3C5198>
[2019-05-11_07:28:09]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:28:09]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:28:09]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:28:09]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:28] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000211CC3C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FEA3B66128>
[2019-05-11_07:28:11]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:28:11]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:28:11]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:28:11]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:28] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FEA3B66978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021404105198>
[2019-05-11_07:28:13]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:28:13]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:28:13]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:28:14]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[11/05/2019 07:28] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000214041059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000299C7A06128>
[2019-05-11_07:28:15]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-11_07:28:15]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-11_07:28:15]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-11_07:28:16]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
Login successful. (4.218983ms)

-----------------
Red - Discord Bot
-----------------
Greedie_Bot#9528

Connected to:
2 servers
33 channels
12 users

Prefix: `
Owner: Greedy#2233
11/17 active cogs with 76 commands
-----------------

Use this url to bring your bot to a server:
https://discordapp.com/oauth2/authorize?client_id=335349901275824131&scope=bot

Official server: https://discord.gg/red
Make sure to keep your bot updated. Select the 'Update' option from the launcher.
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000299C7A06978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000154FFD55198>
[2019-05-12_02:03:51]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:03:52]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:03:52]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:03:52]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:04] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000154FFD559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A03D275198>
[2019-05-12_02:04:18]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:04:18]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:04:18]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:04:18]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:04] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A03D2759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000230518E5198>
[2019-05-12_02:04:20]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:04:20]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:04:20]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:04:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:04] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000230518E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000249282D5198>
[2019-05-12_02:04:22]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:04:22]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:04:22]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:04:23]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:04] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000249282D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F86E9F6128>
[2019-05-12_02:04:24]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:04:25]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:04:25]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:04:25]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:04] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F86E9F6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025749866128>
[2019-05-12_02:04:27]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:04:27]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:04:27]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:04:27]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:04] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025749866978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000189EDDA5198>
[2019-05-12_02:04:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:04:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:04:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:04:41]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:04] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000189EDDA59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001606BEF5198>
[2019-05-12_02:04:43]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:04:43]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:04:43]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:04:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:05] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001606BEF59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AE60085198>
[2019-05-12_02:05:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:05:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:05:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:05:21]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:05] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AE600859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027A14EE5198>
[2019-05-12_02:05:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:05:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:05:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:06:00]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:06] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027A14EE59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000178735C5198>
[2019-05-12_02:06:37]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:06:37]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:06:37]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:06:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:07] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000178735C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000010FF88D5198>
[2019-05-12_02:07:12]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:07:12]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:07:12]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:07:12]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:07] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000010FF88D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000247180A5198>
[2019-05-12_02:07:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:07:26]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:07:26]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:07:27]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:07] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000247180A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000013B0FCE5198>
[2019-05-12_02:07:28]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:07:29]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:07:29]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:07:29]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:07] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000013B0FCE59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000195EDA75198>
[2019-05-12_02:07:31]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:07:31]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:07:31]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:07:31]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:07] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000195EDA759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022528625198>
[2019-05-12_02:07:33]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:07:33]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:07:33]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:07:34]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:07] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000225286259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023C82C55198>
[2019-05-12_02:07:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:07:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:07:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:08:00]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:08] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023C82C559B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DDFBE45198>
[2019-05-12_02:08:02]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:08:02]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:08:02]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:08:02]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:08] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DDFBE459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019A3D276128>
[2019-05-12_02:08:04]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:08:04]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:08:04]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:08:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:08] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019A3D276978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021A5BF25198>
[2019-05-12_02:08:06]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:08:06]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:08:06]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:08:07]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:08] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021A5BF259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002257FE16128>
[2019-05-12_02:08:09]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:08:09]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:08:09]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:08:09]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:08] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002257FE16978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B09F225198>
[2019-05-12_02:08:11]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:08:11]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:08:11]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:08:11]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [WinError 10060] A connection attempt failed because
[nltk_data]     the connected party did not properly respond after a
[nltk_data]     period of time, or established connection failed
[nltk_data]     because connected host has failed to respond>
[nltk_data] Error loading stopwords: <urlopen error [WinError 10060] A
[nltk_data]     connection attempt failed because the connected party
[nltk_data]     did not properly respond after a period of time, or
[nltk_data]     established connection failed because connected host
[nltk_data]     has failed to respond>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 02:09] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 601, in _create_direct_connection
    local_addr=self._local_addr)
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 794, in create_connection
    raise exceptions[0]
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 781, in create_connection
    yield from self.sock_connect(sock, address)
  File "D:\dev\Python\Python36\lib\asyncio\selector_events.py", line 439, in sock_connect
    return (yield from fut)
  File "D:\dev\Python\Python36\lib\asyncio\selector_events.py", line 469, in _sock_connect_cb
    raise OSError(err, 'Connect call failed %s' % (address,))
TimeoutError: [Errno 10060] Connect call failed ('10.0.0.1', 443)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 624, in _create_direct_connection
    (req.host, req.port, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 10060] Can not connect to discordapp.com:443 [Connect call failed ('10.0.0.1', 443)]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 10060] Cannot connect to host discordapp.com:443 ssl:True [Can not connect to discordapp.com:443 [Connect call failed ('10.0.0.1', 443)]]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 601, in _create_direct_connection
    local_addr=self._local_addr)
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 794, in create_connection
    raise exceptions[0]
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 781, in create_connection
    yield from self.sock_connect(sock, address)
  File "D:\dev\Python\Python36\lib\asyncio\selector_events.py", line 439, in sock_connect
    return (yield from fut)
  File "D:\dev\Python\Python36\lib\asyncio\selector_events.py", line 469, in _sock_connect_cb
    raise OSError(err, 'Connect call failed %s' % (address,))
TimeoutError: [Errno 10060] Connect call failed ('10.0.0.1', 443)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 624, in _create_direct_connection
    (req.host, req.port, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 10060] Can not connect to discordapp.com:443 [Connect call failed ('10.0.0.1', 443)]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 10060] Cannot connect to host discordapp.com:443 ssl:True [Can not connect to discordapp.com:443 [Connect call failed ('10.0.0.1', 443)]]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B09F2259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022C01A05198>
[2019-05-12_02:09:16]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_02:09:16]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_02:09:16]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_02:09:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
Login successful. (11.118416ms)

-----------------
Red - Discord Bot
-----------------
Greedie_Bot#9528

Connected to:
2 servers
33 channels
12 users

Prefix: `
Owner: Greedy#2233
11/17 active cogs with 76 commands
-----------------

Use this url to bring your bot to a server:
https://discordapp.com/oauth2/authorize?client_id=335349901275824131&scope=bot

Official server: https://discord.gg/red
Make sure to keep your bot updated. Select the 'Update' option from the launcher.
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022C01A059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000013F37125198>
[2019-05-12_08:43:42]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:43:42]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:43:42]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:43:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000013F371259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000260878F6128>
[2019-05-12_08:43:55]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:43:55]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:43:55]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:43:55]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000260878F6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002835F525198>
[2019-05-12_08:43:57]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:43:57]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:43:57]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:43:57]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002835F5259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002117CC15198>
[2019-05-12_08:43:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:43:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:43:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:44:00]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:44] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002117CC159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FEB6885198>
[2019-05-12_08:44:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:44:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:44:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:44:02]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:44] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FEB68859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000288FFF75198>
[2019-05-12_08:44:04]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:44:04]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:44:04]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:44:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:44] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000288FFF759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029EF0495198>
[2019-05-12_08:44:08]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:44:08]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:44:08]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:44:08]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:44] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029EF04959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025A6B755198>
[2019-05-12_08:44:10]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:44:10]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:44:10]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:44:11]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:44] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025A6B7559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CE2B775198>
[2019-05-12_08:44:12]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:44:12]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:44:12]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:44:13]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:44] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CE2B7759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000293ED076128>
[2019-05-12_08:44:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:44:26]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:44:26]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:44:26]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:44] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000293ED076978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002C7D8726128>
[2019-05-12_08:44:28]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:44:28]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:44:28]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:44:28]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:44] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002C7D8726978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CFECED5198>
[2019-05-12_08:44:30]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:44:30]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:44:30]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:44:30]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:44] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CFECED59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000011159325198>
[2019-05-12_08:44:32]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:44:32]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:44:32]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:44:33]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:44] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000111593259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019882CD6128>
[2019-05-12_08:44:35]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:44:35]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:44:35]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:44:35]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:44] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019882CD6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017C57615198>
[2019-05-12_08:44:43]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:44:43]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:44:43]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:44:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:44] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017C576159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002AFA0EC6128>
[2019-05-12_08:44:45]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:44:46]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:44:46]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:44:46]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:44] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002AFA0EC6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028FBC745198>
[2019-05-12_08:44:48]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:44:48]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:44:48]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:44:48]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:44] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028FBC7459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000129FFF65198>
[2019-05-12_08:45:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:45:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:45:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:45:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:45] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000129FFF659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000253BF1C5198>
[2019-05-12_08:45:03]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:45:03]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:45:03]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:45:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:45] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000253BF1C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020304845198>
[2019-05-12_08:45:05]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:45:05]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:45:06]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:45:06]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:45] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000203048459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002791DD25198>
[2019-05-12_08:45:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:45:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:45:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:45:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:45] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002791DD259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000239ED736128>
[2019-05-12_08:45:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:45:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:45:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:45:21]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:45] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000239ED736978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A102035198>
[2019-05-12_08:45:23]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:45:23]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:45:23]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:45:24]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:45] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A1020359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017F3A955198>
[2019-05-12_08:45:25]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:45:25]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:45:25]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:45:26]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:45] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017F3A9559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BAD25A5198>
[2019-05-12_08:45:28]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:45:28]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:45:28]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:45:28]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:45] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BAD25A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E27E6F5198>
[2019-05-12_08:45:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:45:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:45:37]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:45:37]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:45] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E27E6F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002039CA85198>
[2019-05-12_08:45:39]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:45:39]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:45:39]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:45:39]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:45] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002039CA859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D7A4495198>
[2019-05-12_08:45:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:45:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:45:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:45:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:45] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D7A44959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000218A7DE5198>
[2019-05-12_08:45:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:45:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:45:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:45:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:45] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000218A7DE59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D6E7096128>
[2019-05-12_08:45:46]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:45:46]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:45:46]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:45:46]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:45] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D6E7096978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D53F955198>
[2019-05-12_08:45:48]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:45:48]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:45:48]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:45:49]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:45] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D53F9559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A7D20B5198>
[2019-05-12_08:45:50]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:45:51]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:45:51]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:45:51]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:45] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A7D20B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002662FE75128>
[2019-05-12_08:45:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:45:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:45:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:45:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:46] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002662FE75978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002B6383F5198>
[2019-05-12_08:46:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:46:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:46:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:46:02]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:46] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002B6383F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AA6DDC6128>
[2019-05-12_08:46:04]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:46:04]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:46:04]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:46:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:46] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AA6DDC6940>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018EB3DA5198>
[2019-05-12_08:46:17]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:46:17]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:46:17]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:46:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:46] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018EB3DA59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B954075198>
[2019-05-12_08:46:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:46:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:46:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:46:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:46] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B9540759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000016962F85198>
[2019-05-12_08:46:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:46:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:46:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:46:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:46] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000016962F859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002992C9D5198>
[2019-05-12_08:46:24]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:46:24]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:46:24]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:46:24]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:46] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002992C9D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A275965198>
[2019-05-12_08:46:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:46:26]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:46:26]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:46:26]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:46] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A2759659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020A3A455198>
[2019-05-12_08:46:39]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:46:39]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:46:39]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:46:39]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:46] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020A3A4559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000205B2A45198>
[2019-05-12_08:46:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:46:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:46:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:46:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:46] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000205B2A459B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002CF24435198>
[2019-05-12_08:46:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:46:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:46:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:46:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:46] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002CF244359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AE22BA5198>
[2019-05-12_08:46:46]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:46:46]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:46:46]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:46:46]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:46] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AE22BA59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000189A6295198>
[2019-05-12_08:46:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:46:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:46:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:46:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000189A62959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000192915A5198>
[2019-05-12_08:47:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:47:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:47:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:47:02]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000192915A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000278A0F55198>
[2019-05-12_08:47:04]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:47:04]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:47:04]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:47:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000278A0F559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000285AB225198>
[2019-05-12_08:47:17]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:47:17]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:47:17]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:47:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000285AB2259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021621E25198>
[2019-05-12_08:47:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:47:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:47:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:47:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021621E259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020485645198>
[2019-05-12_08:47:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:47:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:47:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:47:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000204856459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B4F2875198>
[2019-05-12_08:47:34]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:47:35]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:47:35]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:47:35]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B4F28759B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A38CA45198>
[2019-05-12_08:47:37]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:47:37]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:47:37]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:47:37]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A38CA459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FE3CA15198>
[2019-05-12_08:47:39]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:47:39]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:47:39]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:47:39]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FE3CA159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000239A59A5198>
[2019-05-12_08:47:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:47:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:47:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:47:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000239A59A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002518F845198>
[2019-05-12_08:47:54]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:47:54]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:47:54]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:47:55]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002518F8459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000011903445198>
[2019-05-12_08:47:57]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:47:57]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:47:57]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:47:57]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000119034459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000237FFA15198>
[2019-05-12_08:47:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:47:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:47:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:47:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000237FFA159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000192B71E5198>
[2019-05-12_08:48:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:48:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:48:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:48:02]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000192B71E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021E51B95198>
[2019-05-12_08:48:14]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:48:14]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:48:15]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:48:15]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021E51B959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AC8D345198>
[2019-05-12_08:48:17]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:48:17]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:48:17]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:48:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AC8D3459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D7A9CF5198>
[2019-05-12_08:48:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:48:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:48:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:48:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D7A9CF59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000014879915198>
[2019-05-12_08:48:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:48:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:48:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:48:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000148799159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B17C585198>
[2019-05-12_08:48:24]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:48:24]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:48:24]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:48:24]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B17C5859B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002297F315198>
[2019-05-12_08:48:37]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:48:37]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:48:37]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:48:37]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002297F3159B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019ED9FB5198>
[2019-05-12_08:48:39]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:48:39]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:48:39]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:48:39]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019ED9FB59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D4B5826128>
[2019-05-12_08:48:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:48:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:48:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:48:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D4B5826978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AD39EC5198>
[2019-05-12_08:48:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:48:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:48:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:48:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AD39EC59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F3E6255198>
[2019-05-12_08:48:46]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:48:46]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:48:46]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:48:46]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F3E62559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019F6D625198>
[2019-05-12_08:48:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:48:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:48:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:49:00]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019F6D6259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000230A4F95198>
[2019-05-12_08:49:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:49:02]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:49:02]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:49:02]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000230A4F959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021DB5EA5198>
[2019-05-12_08:49:04]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:49:04]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:49:04]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:49:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021DB5EA59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025B096C5198>
[2019-05-12_08:49:06]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:49:06]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:49:06]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:49:06]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025B096C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000278E79D5198>
[2019-05-12_08:49:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:49:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:49:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:49:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000278E79D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DB69CB5198>
[2019-05-12_08:49:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:49:22]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:49:22]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:49:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DB69CB59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A111D95198>
[2019-05-12_08:49:24]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:49:24]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:49:24]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:49:24]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A111D959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000223234F5198>
[2019-05-12_08:49:37]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:49:37]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:49:37]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:49:37]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000223234F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C917605198>
[2019-05-12_08:49:39]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:49:39]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:49:39]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:49:40]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C9176059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002DE573F5198>
[2019-05-12_08:49:42]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:49:42]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:49:42]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:49:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 08:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002DE573F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A6C99D5198>
[2019-05-12_08:49:55]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_08:49:55]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_08:49:55]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_08:49:55]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
Login successful. (3.050125ms)

-----------------
Red - Discord Bot
-----------------
Greedie_Bot#9528

Connected to:
2 servers
33 channels
12 users

Prefix: `
Owner: Greedy#2233
11/17 active cogs with 76 commands
-----------------

Use this url to bring your bot to a server:
https://discordapp.com/oauth2/authorize?client_id=335349901275824131&scope=bot

Official server: https://discord.gg/red
Make sure to keep your bot updated. Select the 'Update' option from the launcher.
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A6C99D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000016FC9605198>
[2019-05-12_10:14:47]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:14:47]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:14:47]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:14:47]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000016FC96059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020034175198>
[2019-05-12_10:15:24]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:15:24]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:15:24]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:15:25]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000200341759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000200754E5198>
[2019-05-12_10:15:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:15:26]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:15:26]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:15:27]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000200754E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000011BFBD16128>
[2019-05-12_10:15:29]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:15:29]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:15:29]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:15:29]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000011BFBD16978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029E36D65198>
[2019-05-12_10:15:31]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:15:31]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:15:31]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:15:31]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029E36D659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F8529B6128>
[2019-05-12_10:15:33]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:15:33]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:15:33]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:15:34]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F8529B6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D3525F5198>
[2019-05-12_10:15:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:15:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:15:36]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:15:36]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D3525F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002231FCB5198>
[2019-05-12_10:15:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:15:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:15:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:15:41]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002231FCB59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FDB36E5198>
[2019-05-12_10:15:43]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:15:43]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:15:43]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:15:43]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FDB36E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026206835198>
[2019-05-12_10:15:45]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:15:45]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:15:45]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:15:46]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000262068359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002D23B585198>
[2019-05-12_10:16:11]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:16:11]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:16:11]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:16:12]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002D23B5859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000206741A4198>
[2019-05-12_10:16:14]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:16:14]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:16:14]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:16:14]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000206741A49E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A5307A5198>
[2019-05-12_10:16:16]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:16:16]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:16:16]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:16:16]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A5307A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D9F2D25198>
[2019-05-12_10:16:18]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:16:18]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:16:18]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:16:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D9F2D259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002593E215198>
[2019-05-12_10:16:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:16:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:16:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:16:21]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002593E2159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022E5BE35198>
[2019-05-12_10:16:23]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:16:23]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:16:23]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:16:23]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022E5BE359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023355275198>
[2019-05-12_10:16:25]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:16:25]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:16:25]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:16:26]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000233552759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FB45085198>
[2019-05-12_10:16:27]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:16:28]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:16:28]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:16:28]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FB450859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000174D12C5198>
[2019-05-12_10:16:42]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:16:42]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:16:42]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:16:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000174D12C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F38A035198>
[2019-05-12_10:16:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:16:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:16:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:16:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F38A0359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018A63B16128>
[2019-05-12_10:16:46]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:16:46]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:16:46]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:16:47]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018A63B16978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027D2A795198>
[2019-05-12_10:17:00]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:17:00]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:17:00]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:17:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027D2A7959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023C492A5198>
[2019-05-12_10:17:03]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:17:03]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:17:03]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:17:03]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023C492A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000235B3935198>
[2019-05-12_10:17:05]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:17:05]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:17:05]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:17:05]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000235B39359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002733A725198>
[2019-05-12_10:17:07]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:17:07]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:17:07]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:17:08]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002733A7259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000209532C5198>
[2019-05-12_10:17:10]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:17:10]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:17:10]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:17:10]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000209532C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F5D8445198>
[2019-05-12_10:17:12]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:17:12]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:17:12]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:17:12]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F5D84459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000161370A5198>
[2019-05-12_10:17:14]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:17:14]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:17:14]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:17:15]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000161370A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C8D7386128>
[2019-05-12_10:17:17]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:17:17]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:17:17]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:17:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C8D7386978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CB077D5198>
[2019-05-12_10:17:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:17:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:17:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:17:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CB077D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000234CBF95198>
[2019-05-12_10:17:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:17:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:17:22]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:17:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000234CBF959B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000157354F5198>
[2019-05-12_10:17:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:17:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:17:36]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:17:36]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000157354F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BE23365198>
[2019-05-12_10:17:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:17:38]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:17:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:17:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BE233659B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F7EB1A5198>
[2019-05-12_10:17:40]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:17:40]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:17:40]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:17:41]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F7EB1A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002DDB09B5198>
[2019-05-12_10:17:54]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:17:54]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:17:54]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:17:55]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002DDB09B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001177A615198>
[2019-05-12_10:17:57]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:17:57]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:17:57]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:17:57]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001177A6159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029AC9C25198>
[2019-05-12_10:17:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:17:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:17:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:17:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029AC9C259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B194045198>
[2019-05-12_10:18:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:18:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:18:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:18:02]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B1940459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018802595198>
[2019-05-12_10:18:04]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:18:04]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:18:04]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:18:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000188025959B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BE04495198>
[2019-05-12_10:18:06]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:18:06]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:18:06]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:18:06]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BE044959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000197DB5E5198>
[2019-05-12_10:18:16]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:18:16]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:18:16]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:18:16]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000197DB5E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A807BC5198>
[2019-05-12_10:18:18]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:18:18]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:18:18]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:18:18]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A807BC59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002611EBC5198>
[2019-05-12_10:18:20]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:18:20]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:18:20]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:18:21]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002611EBC59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F23D575198>
[2019-05-12_10:18:22]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:18:22]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:18:23]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:18:23]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F23D5759B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000015296FF6128>
[2019-05-12_10:18:25]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:18:25]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:18:25]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:18:25]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000015296FF6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027C152A5198>
[2019-05-12_10:18:27]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:18:27]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:18:27]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:18:28]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027C152A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000015EADE55198>
[2019-05-12_10:18:29]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:18:29]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:18:29]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:18:30]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000015EADE559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000257C5435198>
[2019-05-12_10:18:32]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:18:32]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:18:32]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:18:32]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000257C54359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019CA4B95198>
[2019-05-12_10:18:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:18:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:18:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:18:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019CA4B959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002201EE95198>
[2019-05-12_10:18:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:18:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:18:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:18:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002201EE959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000155E63B5198>
[2019-05-12_10:18:46]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:18:46]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:18:46]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:18:46]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000155E63B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028737EE5198>
[2019-05-12_10:18:48]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:18:48]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:18:48]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:18:49]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028737EE59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021A2C105198>
[2019-05-12_10:19:02]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:19:02]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:19:02]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:19:03]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021A2C1059B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002B331DB5198>
[2019-05-12_10:19:05]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:19:05]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:19:05]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:19:05]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002B331DB59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026822C96128>
[2019-05-12_10:19:07]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:19:07]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:19:07]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:19:07]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026822C96978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000012AB8385198>
[2019-05-12_10:19:09]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:19:09]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:19:09]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:19:10]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000012AB83859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000203131E5198>
[2019-05-12_10:19:12]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:19:12]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:19:12]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:19:12]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000203131E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EF735B5198>
[2019-05-12_10:19:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:19:26]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:19:26]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:19:26]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EF735B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F05BA75198>
[2019-05-12_10:19:28]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:19:28]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:19:28]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:19:29]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F05BA759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C3C83B5198>
[2019-05-12_10:19:30]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:19:30]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:19:31]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:19:31]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C3C83B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002DCA79C5198>
[2019-05-12_10:19:33]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:19:33]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:19:33]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:19:33]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002DCA79C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000011171515198>
[2019-05-12_10:19:35]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:19:35]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:19:35]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:19:36]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000111715159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000210C67F6128>
[2019-05-12_10:19:37]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:19:37]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:19:37]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:19:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000210C67F6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D276BF5198>
[2019-05-12_10:19:52]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:19:52]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:19:52]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:19:52]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D276BF59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A6ECCB5198>
[2019-05-12_10:19:54]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:19:54]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:19:54]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:19:54]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A6ECCB59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000233A6A35198>
[2019-05-12_10:19:56]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:19:56]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:19:56]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:19:57]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000233A6A359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000011EA4095198>
[2019-05-12_10:19:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:19:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:19:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:19:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000011EA40959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023DCD005198>
[2019-05-12_10:20:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:20:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:20:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:20:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023DCD0059B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002648D445198>
[2019-05-12_10:20:10]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:20:10]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:20:10]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:20:11]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002648D4459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A392E65198>
[2019-05-12_10:20:13]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:20:13]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:20:13]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:20:13]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A392E659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028E0D5C6128>
[2019-05-12_10:20:15]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:20:15]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:20:15]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:20:15]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028E0D5C6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002E5D6C35198>
[2019-05-12_10:20:29]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:20:29]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:20:29]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:20:30]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002E5D6C359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D815F75198>
[2019-05-12_10:20:32]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:20:32]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:20:32]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:20:32]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D815F759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028EE3865198>
[2019-05-12_10:20:34]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:20:34]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:20:34]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:20:34]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028EE38659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EB59035198>
[2019-05-12_10:20:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:20:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:20:36]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:20:37]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[12/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EB590359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C9E1286128>
[2019-05-12_10:20:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-12_10:20:39]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-12_10:20:39]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-12_10:20:39]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
Login successful. (4.297113ms)

-----------------
Red - Discord Bot
-----------------
Greedie_Bot#9528

Connected to:
2 servers
33 channels
12 users

Prefix: `
Owner: Greedy#2233
11/17 active cogs with 76 commands
-----------------

Use this url to bring your bot to a server:
https://discordapp.com/oauth2/authorize?client_id=335349901275824131&scope=bot

Official server: https://discord.gg/red
Make sure to keep your bot updated. Select the 'Update' option from the launcher.
INFO:websockets.protocol:Failing the WebSocket connection: 1006 
[2019-05-13_08:50:09]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config

initializing wallpaper scheduler
scheduling server: 225351701505376257 everybdy_hates_chwis
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
scheduling server: 266047323166081024 greedy_dev
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
--------------------view cats selected--------------------
[]
INFO:apscheduler.executors.default:Running job "Wallpaper.post_auto (trigger: cron[hour='13', minute='0'], next run at: 2019-05-14 13:00:00 MDT)" (scheduled at 2019-05-13 13:00:00-06:00)
[13:00:00]----------AUTO WP POST--------------------
posting to:
server:  266047323166081024   name: greedy_dev
channel: 266047323166081024   name: dev
server categories: []
Exception: 'NoneType' object has no attribute 'keys'
Traceback (most recent call last):
  File "D:\Documents\Code\python\Greedie_Bot\cogs\wallpaper.py", line 303, in post_auto
    row = self.get_read_image(csr_read, server_cats)    # get random image
  File "D:\Documents\Code\python\Greedie_Bot\cogs\wallpaper.py", line 368, in get_read_image
    print('read db, columns  : ' + str(row.keys()))
AttributeError: 'NoneType' object has no attribute 'keys'
INFO:apscheduler.executors.default:Job "Wallpaper.post_auto (trigger: cron[hour='13', minute='0'], next run at: 2019-05-14 13:00:00 MDT)" executed successfully
[2019-05-13_17:52:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config

initializing wallpaper scheduler
scheduling server: 225351701505376257 everybdy_hates_chwis
lib\discord\ext\commands\core.py:367: RuntimeWarning: coroutine 'Bot.send_message' was never awaited
  yield from self.prepare(ctx)
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
scheduling server: 266047323166081024 greedy_dev
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
--------------------view cats selected--------------------
[]
saving dailypost settings: 225351701505376257 everybdy_hates_chwis
saving dailypost settings: 266047323166081024 greedy_dev
Saving DailyPostBot config
saving gif bot settings: 225351701505376257 everybdy_hates_chwis
saving gif bot settings: 266047323166081024 greedy_dev
Saving GIFBot config
saving wallpaper settings and categories: 225351701505376257 everybdy_hates_chwis
saving wallpaper settings and categories: 266047323166081024 greedy_dev
Saving WallpaperBot config
saving dailypost settings: 225351701505376257 everybdy_hates_chwis
saving dailypost settings: 266047323166081024 greedy_dev
Saving DailyPostBot config
saving gif bot settings: 225351701505376257 everybdy_hates_chwis
saving gif bot settings: 266047323166081024 greedy_dev
Saving GIFBot config
saving wallpaper settings and categories: 225351701505376257 everybdy_hates_chwis
saving wallpaper settings and categories: 266047323166081024 greedy_dev
Saving WallpaperBot config
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C9E1286978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000196E3175198>
[2019-05-13_17:53:43]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-13_17:53:43]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-13_17:53:43]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-13_17:53:43]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
Login successful. (3.833081ms)

-----------------
Red - Discord Bot
-----------------
Greedie_Bot#9528

Connected to:
2 servers
33 channels
12 users

Prefix: `
Owner: Greedy#2233
11/17 active cogs with 76 commands
-----------------

Use this url to bring your bot to a server:
https://discordapp.com/oauth2/authorize?client_id=335349901275824131&scope=bot

Official server: https://discord.gg/red
Make sure to keep your bot updated. Select the 'Update' option from the launcher.
[2019-05-13_17:53:51]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config

initializing wallpaper scheduler
scheduling server: 225351701505376257 everybdy_hates_chwis
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
scheduling server: 266047323166081024 greedy_dev
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
--------------------Chatbot message--------------------
INFO:chatterbot.chatterbot:Beginning search for close text match
INFO:chatterbot.chatterbot:Processing search results
INFO:chatterbot.chatterbot:Similar text found: That isn't my name, but it is a useful way to refer to me. 0.07
INFO:chatterbot.chatterbot:Similar text found: It is a computer 0.11
INFO:chatterbot.chatterbot:Similar text found: What is it like being a computer 0.12
INFO:chatterbot.chatterbot:Similar text found: What kind of computer 0.17
INFO:chatterbot.chatterbot:Similar text found: What is a computer? 0.19
INFO:chatterbot.chatterbot:Similar text found: Hi 1.0
INFO:chatterbot.chatterbot:Using "Hi" as a close match to "hi" with a confidence of 1.0
INFO:chatterbot.chatterbot:0. Excluding recent repeated response of "hi"
INFO:chatterbot.chatterbot:Selecting response from 2 optimal responses.
INFO:chatterbot.response_selection:Selecting first response from list of 2 options.
INFO:chatterbot.chatterbot:Response selected. Using "How are you doing?"
INFO:chatterbot.chatterbot:BestMatch selected "How are you doing?" as a response with a confidence of 1.0
INFO:chatterbot.chatterbot:Adding "hi" as a response to "hi"
message content: <@335349901275824131> hi
editted content:  hi
[17:54:03] <@335349901275824131> hi | How are you doing?
INFO:apscheduler.executors.default:Running job "Wallpaper.post_auto (trigger: cron[hour='18', minute='0'], next run at: 2019-05-14 18:00:00 MDT)" (scheduled at 2019-05-13 18:00:00-06:00)
[18:00:00]----------AUTO WP POST--------------------
posting to:
server:  225351701505376257   name: everybdy_hates_chwis
channel: 367824417398718464   name: wallpaper_chwis
server categories: ['Anime Scenery']
read db, columns  : ['id', 'CategoryId', 'Path', 'Filename', 'CategoryName']
read db, retrieved: [5133, 6, 'D:\\Pictures\\Anime Scenery\\SS', 'The.Sky.Crawlers(BD.1080p.FLAC.DA)[957D0F29][Elysium].mkv_snapshot_01.16.18_[2014.09.06_00.26.05].png', 'Anime Scenery']
checkrow type: <class 'NoneType'>
TRY #0, image not a duplicate, posting
writerow: [5133, 6, 'Anime Scenery', 'D:\\Pictures\\Anime Scenery\\SS', 'The.Sky.Crawlers(BD.1080p.FLAC.DA)[957D0F29][Elysium].mkv_snapshot_01.16.18_[2014.09.06_00.26.05].png', 1]
filepath: D:\Pictures\Anime Scenery\SS\The.Sky.Crawlers(BD.1080p.FLAC.DA)[957D0F29][Elysium].mkv_snapshot_01.16.18_[2014.09.06_00.26.05].png
posted image: D:\Pictures\Anime Scenery\SS\The.Sky.Crawlers(BD.1080p.FLAC.DA)[957D0F29][Elysium].mkv_snapshot_01.16.18_[2014.09.06_00.26.05].png
saved posted image to writeDB
INFO:apscheduler.executors.default:Job "Wallpaper.post_auto (trigger: cron[hour='18', minute='0'], next run at: 2019-05-14 18:00:00 MDT)" executed successfully
saving dailypost settings: 225351701505376257 everybdy_hates_chwis
saving dailypost settings: 266047323166081024 greedy_dev
Saving DailyPostBot config
saving gif bot settings: 225351701505376257 everybdy_hates_chwis
saving gif bot settings: 266047323166081024 greedy_dev
Saving GIFBot config
saving wallpaper settings and categories: 225351701505376257 everybdy_hates_chwis
saving wallpaper settings and categories: 266047323166081024 greedy_dev
Saving WallpaperBot config
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000196E31759E8>
Restarting Red...
Restarting Red...
Red has been terminated. Exit code: 0
Press enter to continue.==========================
Red Discord Bot - Launcher
==========================

1. Run Red /w autorestart in case of issues
2. Run Red
3. Update
4. Install requirements
5. Maintenance (repair, reset...)

0. Quit
> ==========================
Red Discord Bot - Launcher
==========================

1. Run Red /w autorestart in case of issues
2. Run Red
3. Update
4. Install requirements
5. Maintenance (repair, reset...)

0. Quit
> ==========================
Red Discord Bot - Launcher
==========================

1. Run Red /w autorestart in case of issues
2. Run Red
3. Update
4. Install requirements
5. Maintenance (repair, reset...)

0. Quit
> ==========================
Red Discord Bot - Launcher
==========================

1. Run Red /w autorestart in case of issues
2. Run Red
3. Update
4. Install requirements
5. Maintenance (repair, reset...)

0. Quit
> ==========================
Red Discord Bot - Launcher
==========================

1. Run Red /w autorestart in case of issues
2. Run Red
3. Update
4. Install requirements
5. Maintenance (repair, reset...)

0. Quit
> ==========================
Red Discord Bot - Launcher
==========================

1. Run Red /w autorestart in case of issues
2. Run Red
3. Update
4. Install requirements
5. Maintenance (repair, reset...)

0. Quit
> ==========================
Red Discord Bot - Launcher
==========================

1. Run Red /w autorestart in case of issues
2. Run Red
3. Update
4. Install requirements
5. Maintenance (repair, reset...)

0. Quit
> ==========================
Red Discord Bot - Launcher
==========================

1. Run Red /w autorestart in case of issues
2. Run Red
3. Update
4. Install requirements
5. Maintenance (repair, reset...)

0. Quit
> ==========================
Red Discord Bot - Launcher
==========================

1. Run Red /w autorestart in case of issues
2. Run Red
3. Update
4. Install requirements
5. Maintenance (repair, reset...)

0. Quit
> Press any key to continue . . . 
