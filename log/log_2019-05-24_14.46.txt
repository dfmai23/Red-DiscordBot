Active code page: 65001

Verifying git installation...
==========================
Red Discord Bot - Launcher
==========================

1. Run Red /w autorestart in case of issues
2. Run Red
3. Update
4. Install requirements
5. Maintenance (repair, reset...)

0. Quit
> ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C022865198>
[2019-05-24_14:46:43]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-24_14:46:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-24_14:46:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-24_14:46:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
Login successful. (4.706453ms)

-----------------
Red - Discord Bot
-----------------
Greedie_Bot#9528

Connected to:
2 servers
33 channels
12 users

Prefix: `
Owner: Greedy#2233
11/17 active cogs with 76 commands
-----------------

Use this url to bring your bot to a server:
https://discordapp.com/oauth2/authorize?client_id=335349901275824131&scope=bot

Official server: https://discord.gg/red
Make sure to keep your bot updated. Select the 'Update' option from the launcher.
[2019-05-24_14:46:55]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config

initializing wallpaper scheduler
scheduling server: 225351701505376257 everybdy_hates_chwis
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
scheduling server: 266047323166081024 greedy_dev
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:apscheduler.executors.default:Running job "Wallpaper.post_auto (trigger: cron[hour='18', minute='0'], next run at: 2019-05-25 18:00:00 MDT)" (scheduled at 2019-05-24 18:00:00-06:00)
[18:00:00]----------AUTO WP POST--------------------
posting to:
server:  225351701505376257   name: everybdy_hates_chwis
channel: 367824417398718464   name: wallpaper_chwis
server categories: ['Anime Scenery', '_Sekiro_Landscape']
read db, columns  : ['id', 'CategoryId', 'Path', 'Filename', 'CategoryName']
read db, retrieved: [4235, 6, 'D:\\Pictures\\Anime Scenery\\Anime\\Space Battleship Yamato 2199', '[Kagura] Uchuu Senkan Yamato 2199 - 02 [BDRip 1920x1080 x264 Hi10P FLAC].mkv_snapshot_12.59_[2014.02.04_20.30.31].png', 'Anime Scenery']
checkrow type: <class 'NoneType'>
TRY #0, image not a duplicate, posting
writerow: [4235, 6, 'Anime Scenery', 'D:\\Pictures\\Anime Scenery\\Anime\\Space Battleship Yamato 2199', '[Kagura] Uchuu Senkan Yamato 2199 - 02 [BDRip 1920x1080 x264 Hi10P FLAC].mkv_snapshot_12.59_[2014.02.04_20.30.31].png', 1]
filepath: D:\Pictures\Anime Scenery\Anime\Space Battleship Yamato 2199\[Kagura] Uchuu Senkan Yamato 2199 - 02 [BDRip 1920x1080 x264 Hi10P FLAC].mkv_snapshot_12.59_[2014.02.04_20.30.31].png
posted image: D:\Pictures\Anime Scenery\Anime\Space Battleship Yamato 2199\[Kagura] Uchuu Senkan Yamato 2199 - 02 [BDRip 1920x1080 x264 Hi10P FLAC].mkv_snapshot_12.59_[2014.02.04_20.30.31].png
saved posted image to writeDB
INFO:apscheduler.executors.default:Job "Wallpaper.post_auto (trigger: cron[hour='18', minute='0'], next run at: 2019-05-25 18:00:00 MDT)" executed successfully
INFO:apscheduler.executors.default:Running job "Wallpaper.post_auto (trigger: cron[hour='13', minute='0'], next run at: 2019-05-26 13:00:00 MDT)" (scheduled at 2019-05-25 13:00:00-06:00)
[13:00:00]----------AUTO WP POST--------------------
posting to:
server:  266047323166081024   name: greedy_dev
channel: 266047323166081024   name: dev
server categories: []
Exception: 'NoneType' object has no attribute 'keys'
Traceback (most recent call last):
  File "D:\Documents\Code\python\Greedie_Bot\cogs\wallpaper.py", line 303, in post_auto
    row = self.get_read_image(csr_read, server_cats)    # get random image
  File "D:\Documents\Code\python\Greedie_Bot\cogs\wallpaper.py", line 368, in get_read_image
    print('read db, columns  : ' + str(row.keys()))
AttributeError: 'NoneType' object has no attribute 'keys'
INFO:apscheduler.executors.default:Job "Wallpaper.post_auto (trigger: cron[hour='13', minute='0'], next run at: 2019-05-26 13:00:00 MDT)" executed successfully
INFO:apscheduler.executors.default:Running job "Wallpaper.post_auto (trigger: cron[hour='18', minute='0'], next run at: 2019-05-26 18:00:00 MDT)" (scheduled at 2019-05-25 18:00:00-06:00)
[18:00:00]----------AUTO WP POST--------------------
posting to:
server:  225351701505376257   name: everybdy_hates_chwis
channel: 367824417398718464   name: wallpaper_chwis
server categories: ['Anime Scenery', '_Sekiro_Landscape']
read db, columns  : ['id', 'CategoryId', 'Path', 'Filename', 'CategoryName']
read db, retrieved: [5275, 6, 'D:\\Pictures\\Anime Scenery\\Studio Ghibli\\Only Yesterday', '1991 Only Yesterday~Omoide Poroporo (720p Blu-ray 8bit AAC)[9502069B][NoobSubs][Fussoir].mkv_snapshot_01.19.27_[2016.07.28_15.20.03].png', 'Anime Scenery']
checkrow type: <class 'NoneType'>
TRY #0, image not a duplicate, posting
writerow: [5275, 6, 'Anime Scenery', 'D:\\Pictures\\Anime Scenery\\Studio Ghibli\\Only Yesterday', '1991 Only Yesterday~Omoide Poroporo (720p Blu-ray 8bit AAC)[9502069B][NoobSubs][Fussoir].mkv_snapshot_01.19.27_[2016.07.28_15.20.03].png', 1]
filepath: D:\Pictures\Anime Scenery\Studio Ghibli\Only Yesterday\1991 Only Yesterday~Omoide Poroporo (720p Blu-ray 8bit AAC)[9502069B][NoobSubs][Fussoir].mkv_snapshot_01.19.27_[2016.07.28_15.20.03].png
posted image: D:\Pictures\Anime Scenery\Studio Ghibli\Only Yesterday\1991 Only Yesterday~Omoide Poroporo (720p Blu-ray 8bit AAC)[9502069B][NoobSubs][Fussoir].mkv_snapshot_01.19.27_[2016.07.28_15.20.03].png
saved posted image to writeDB
D:\dev\Python\Python36\lib\selectors.py:326: RuntimeWarning: coroutine 'Bot.send_message' was never awaited
  r = set(r)
INFO:apscheduler.executors.default:Job "Wallpaper.post_auto (trigger: cron[hour='18', minute='0'], next run at: 2019-05-26 18:00:00 MDT)" executed successfully
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C0228659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022D2DF25198>
[2019-05-26_08:33:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:33:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:33:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:33:45]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022D2DF259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021DB6E35198>
[2019-05-26_08:33:46]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:33:46]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:33:46]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:33:47]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021DB6E359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019A06B16128>
[2019-05-26_08:33:48]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:33:48]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:33:48]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:33:48]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019A06B16978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002ACC03E5198>
[2019-05-26_08:33:50]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:33:50]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:33:50]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:33:50]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002ACC03E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D82A495198>
[2019-05-26_08:33:52]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:33:52]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:33:52]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:33:52]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D82A4959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019E734C5198>
[2019-05-26_08:33:53]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:33:53]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:33:53]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:33:54]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019E734C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D65FD45198>
[2019-05-26_08:33:55]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:33:55]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:33:55]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:33:56]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D65FD459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DAFB545198>
[2019-05-26_08:33:57]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:33:57]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:33:57]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:33:57]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DAFB5459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F919245198>
[2019-05-26_08:33:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:33:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:33:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:33:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:33] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F9192459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E734D55198>
[2019-05-26_08:34:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:34:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:34:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:34:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E734D559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DC53B96128>
[2019-05-26_08:34:13]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:34:13]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:34:13]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:34:14]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DC53B96978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002168E835198>
[2019-05-26_08:34:15]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:34:15]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:34:15]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:34:16]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002168E8359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002D084A05198>
[2019-05-26_08:34:17]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:34:17]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:34:17]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:34:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002D084A059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002DE88845198>
[2019-05-26_08:34:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:34:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:34:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:34:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002DE888459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023FC1235198>
[2019-05-26_08:34:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:34:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:34:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:34:21]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023FC12359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018F05405198>
[2019-05-26_08:34:33]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:34:33]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:34:33]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:34:34]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018F054059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000115B29D5198>
[2019-05-26_08:34:35]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:34:35]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:34:35]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:34:35]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000115B29D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000193AD905198>
[2019-05-26_08:34:37]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:34:37]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:34:37]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:34:37]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000193AD9059B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000178CC6D5198>
[2019-05-26_08:34:39]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:34:39]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:34:39]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:34:39]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000178CC6D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DD6C075198>
[2019-05-26_08:34:40]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:34:40]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:34:40]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:34:41]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DD6C0759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000012610985198>
[2019-05-26_08:34:53]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:34:53]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:34:53]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:34:54]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000126109859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E62DF55198>
[2019-05-26_08:34:55]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:34:55]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:34:55]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:34:55]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E62DF559B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024626FD5198>
[2019-05-26_08:34:57]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:34:57]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:34:57]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:34:57]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024626FD59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000015E49C76128>
[2019-05-26_08:34:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:34:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:34:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:34:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:34] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000015E49C76978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022BCB4E5198>
[2019-05-26_08:35:00]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:35:00]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:35:00]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:35:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:35] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022BCB4E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A535736128>
[2019-05-26_08:35:02]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:35:02]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:35:02]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:35:03]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:35] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A535736978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E1C2375198>
[2019-05-26_08:35:09]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:35:09]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:35:09]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:35:10]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:35] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E1C23759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021E3A195198>
[2019-05-26_08:35:11]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:35:11]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:35:11]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:35:12]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:35] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021E3A1959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000206B25A5198>
[2019-05-26_08:35:13]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:35:13]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:35:13]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:35:13]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:35] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000206B25A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000014A1A855198>
[2019-05-26_08:35:20]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:35:20]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:35:20]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:35:21]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:35] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000014A1A8559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CF1B335198>
[2019-05-26_08:35:22]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:35:22]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:35:22]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:35:23]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:35] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CF1B3359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000233BD015198>
[2019-05-26_08:35:24]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:35:24]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:35:24]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:35:24]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:35] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000233BD0159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E15BCD5198>
[2019-05-26_08:35:37]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:35:37]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:35:37]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:35:37]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:35] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E15BCD59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029F7B2F5198>
[2019-05-26_08:35:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:35:39]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:35:39]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:35:39]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:35] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029F7B2F59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C774625198>
[2019-05-26_08:35:40]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:35:40]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:35:40]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:35:41]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:35] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C7746259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000154953E5198>
[2019-05-26_08:35:42]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:35:42]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:35:42]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:35:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:35] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000154953E59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002C3B8DF6128>
[2019-05-26_08:35:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:35:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:35:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:35:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:35] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002C3B8DF6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022D66726128>
[2019-05-26_08:35:57]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:35:57]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:35:57]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:35:57]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:35] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022D66726978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000184B1A95198>
[2019-05-26_08:35:58]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:35:58]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:35:58]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:35:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:35] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000184B1A959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025FA2A15198>
[2019-05-26_08:36:00]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:36:00]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:36:00]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:36:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:36] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025FA2A159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022C6AE85198>
[2019-05-26_08:36:02]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:36:02]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:36:02]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:36:02]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:36] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022C6AE859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001414E935198>
[2019-05-26_08:36:04]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:36:04]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:36:04]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:36:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:36] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001414E9359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000165DBAC5198>
[2019-05-26_08:36:11]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:36:11]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:36:11]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:36:11]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:36] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000165DBAC59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EC670C5198>
[2019-05-26_08:36:13]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:36:13]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:36:13]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:36:13]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:36] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EC670C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002C435FB6128>
[2019-05-26_08:36:15]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:36:15]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:36:15]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:36:15]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:36] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002C435FB6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000189BE585198>
[2019-05-26_08:36:27]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:36:27]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:36:27]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:36:28]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:36] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000189BE5859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C3C49A6128>
[2019-05-26_08:36:29]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:36:29]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:36:29]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:36:29]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:36] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C3C49A6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027817C85198>
[2019-05-26_08:36:31]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:36:31]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:36:31]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:36:31]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:36] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027817C859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025423725198>
[2019-05-26_08:36:43]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:36:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:36:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:36:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:36] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000254237259B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FC11DE6128>
[2019-05-26_08:36:45]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:36:45]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:36:45]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:36:46]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:36] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FC11DE6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CDF4F85198>
[2019-05-26_08:36:47]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:36:47]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:36:47]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:36:47]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:36] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CDF4F859B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017F85706128>
[2019-05-26_08:37:00]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:37:00]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:37:00]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:37:00]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:37] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017F85706978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028D07B85198>
[2019-05-26_08:37:02]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:37:02]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:37:02]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:37:02]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:37] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028D07B859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024CB6A35198>
[2019-05-26_08:37:03]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:37:03]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:37:03]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:37:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:37] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024CB6A359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000209C6AC6128>
[2019-05-26_08:37:05]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:37:05]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:37:05]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:37:06]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:37] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000209C6AC6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C276725198>
[2019-05-26_08:37:07]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:37:07]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:37:07]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:37:07]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:37] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C2767259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018C61715198>
[2019-05-26_08:37:14]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:37:14]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:37:14]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:37:15]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:37] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018C617159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000195C8295198>
[2019-05-26_08:37:16]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:37:16]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:37:16]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:37:16]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:37] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000195C82959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001989E7D5198>
[2019-05-26_08:37:18]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:37:18]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:37:18]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:37:18]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:37] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001989E7D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000016017B65198>
[2019-05-26_08:37:31]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:37:31]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:37:31]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:37:31]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:37] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000016017B659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020B1CCD5198>
[2019-05-26_08:37:32]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:37:32]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:37:32]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:37:33]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:37] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020B1CCD59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025343B15198>
[2019-05-26_08:37:34]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:37:34]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:37:34]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:37:35]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:37] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025343B159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000276D22A6128>
[2019-05-26_08:37:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:37:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:37:36]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:37:36]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:37] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000276D22A6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002234FD46128>
[2019-05-26_08:37:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:37:38]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:37:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:37:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:37] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002234FD46978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F065F35198>
[2019-05-26_08:37:50]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:37:50]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:37:50]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:37:51]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:37] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F065F359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021167765198>
[2019-05-26_08:37:52]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:37:52]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:37:52]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:37:53]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:37] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000211677659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EADF4F6128>
[2019-05-26_08:37:54]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:37:54]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:37:54]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:37:54]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:37] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EADF4F6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A0E5E25198>
[2019-05-26_08:37:56]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:37:56]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:37:56]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:37:56]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:37] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A0E5E259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002CDDC346128>
[2019-05-26_08:37:58]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:37:58]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:37:58]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:37:58]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:37] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002CDDC346978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000213AE6D5198>
[2019-05-26_08:37:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:37:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:37:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:00]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000213AE6D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000233A8DE5198>
[2019-05-26_08:38:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:02]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000233A8DE59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002194F115198>
[2019-05-26_08:38:03]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:03]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:03]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:03]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002194F1159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002DE673F6128>
[2019-05-26_08:38:05]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:05]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:05]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:05]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002DE673F6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024DE7C76128>
[2019-05-26_08:38:07]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:07]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:07]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:07]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024DE7C76978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D718646128>
[2019-05-26_08:38:08]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:09]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:09]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:09]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D718646978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026EA2AD5198>
[2019-05-26_08:38:10]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:10]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:10]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:11]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026EA2AD59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002C1B2125198>
[2019-05-26_08:38:12]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:12]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:12]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:13]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002C1B21259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002929B265198>
[2019-05-26_08:38:14]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:14]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:14]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:14]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002929B2659B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FB31EA6128>
[2019-05-26_08:38:27]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:27]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:27]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:27]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FB31EA6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027125476128>
[2019-05-26_08:38:28]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:28]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:28]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:29]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027125476978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002080B036128>
[2019-05-26_08:38:30]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:30]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:30]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:31]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002080B036940>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C115FC5198>
[2019-05-26_08:38:32]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:32]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:32]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:32]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C115FC59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018454595198>
[2019-05-26_08:38:34]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:34]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:34]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:34]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000184545959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002420F785198>
[2019-05-26_08:38:35]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:36]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:36]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002420F7859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021718BB5198>
[2019-05-26_08:38:37]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:37]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:37]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021718BB59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002ACC4E65198>
[2019-05-26_08:38:39]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:39]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:39]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:39]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002ACC4E659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F88E205198>
[2019-05-26_08:38:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:41]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F88E2059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E6F47A5198>
[2019-05-26_08:38:43]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:43]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:43]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:43]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E6F47A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000012995DD5198>
[2019-05-26_08:38:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:45]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000012995DD59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029DB80D5198>
[2019-05-26_08:38:46]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:46]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:46]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:47]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029DB80D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B517DE5198>
[2019-05-26_08:38:48]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:48]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:48]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:48]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B517DE5518>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018A2DC35198>
[2019-05-26_08:38:50]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:50]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:50]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:50]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018A2DC359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024AF3B84198>
[2019-05-26_08:38:52]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:52]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:52]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:52]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024AF3B849B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025F1C6F6128>
[2019-05-26_08:38:53]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:53]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:54]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:54]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025F1C6F6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000012BC8B95198>
[2019-05-26_08:38:55]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:55]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:55]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:56]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000012BC8B959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023B31CD5198>
[2019-05-26_08:38:57]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:57]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:57]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:57]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:38] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023B31CD59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F6B5F76128>
[2019-05-26_08:38:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:38:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:38:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:38:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:39] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F6B5F76978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022661DC5198>
[2019-05-26_08:39:11]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:39:11]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:39:11]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:39:11]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:39] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022661DC59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026D044D6128>
[2019-05-26_08:39:13]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:39:13]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:39:13]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:39:13]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:39] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026D044D6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001536B145198>
[2019-05-26_08:39:14]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:39:14]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:39:14]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:39:15]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:39] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001536B1459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E849A66128>
[2019-05-26_08:39:16]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:39:16]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:39:16]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:39:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:39] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E849A66978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024C2B3F5198>
[2019-05-26_08:39:18]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:39:18]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:39:18]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:39:18]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:39] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024C2B3F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C165415198>
[2019-05-26_08:39:31]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:39:31]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:39:31]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:39:31]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:39] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C1654159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A224C96128>
[2019-05-26_08:39:32]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:39:32]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:39:32]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:39:33]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:39] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A224C96978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C59DDB5198>
[2019-05-26_08:39:34]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:39:34]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:39:34]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:39:35]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:39] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C59DDB59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A5CE615198>
[2019-05-26_08:39:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:39:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:39:36]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:39:36]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:39] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A5CE6159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019AABC46128>
[2019-05-26_08:39:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:39:38]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:39:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:39:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:39] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019AABC46978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025814466128>
[2019-05-26_08:39:39]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:39:40]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:39:40]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:39:40]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[26/05/2019 08:39] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025814466978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002D5D8405198>
[2019-05-26_08:39:47]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-26_08:39:47]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-26_08:39:47]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-26_08:39:48]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
Login successful. (3.011124ms)

-----------------
Red - Discord Bot
-----------------
Greedie_Bot#9528

Connected to:
2 servers
33 channels
12 users

Prefix: `
Owner: Greedy#2233
11/17 active cogs with 76 commands
-----------------

Use this url to bring your bot to a server:
https://discordapp.com/oauth2/authorize?client_id=335349901275824131&scope=bot

Official server: https://discord.gg/red
Make sure to keep your bot updated. Select the 'Update' option from the launcher.
[2019-05-26_20:04:16]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config

initializing wallpaper scheduler
scheduling server: 225351701505376257 everybdy_hates_chwis
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
scheduling server: 266047323166081024 greedy_dev
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002D5D84059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021A812C6128>
[2019-05-27_10:56:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_10:56:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_10:56:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_10:56:41]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 10:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021A812C6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018295DA5198>
[2019-05-27_10:57:16]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_10:57:16]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_10:57:16]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_10:57:16]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 10:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018295DA59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000241523A5198>
[2019-05-27_10:57:50]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_10:57:50]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_10:57:50]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_10:57:51]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 10:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000241523A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E6678B5198>
[2019-05-27_10:58:25]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_10:58:25]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_10:58:25]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_10:58:25]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 10:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E6678B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000222C0685198>
[2019-05-27_10:58:56]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_10:58:56]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_10:58:56]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_10:58:56]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 10:59] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000222C06859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F2042D5198>
[2019-05-27_10:59:29]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_10:59:29]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_10:59:29]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_10:59:29]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:00] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F2042D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019811D05198>
[2019-05-27_11:00:02]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:00:02]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:00:02]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:00:02]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:00] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019811D059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002EB466D5198>
[2019-05-27_11:00:37]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:00:37]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:00:37]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:00:37]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:00] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002EB466D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000014058E86128>
[2019-05-27_11:00:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:00:38]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:00:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:00:39]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:00] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000014058E86978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B7F9DB5198>
[2019-05-27_11:00:40]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:00:40]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:00:40]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:00:40]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:00] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B7F9DB59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002B5D7355198>
[2019-05-27_11:00:53]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:00:53]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:00:53]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:00:53]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:00] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002B5D73559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000270EB025198>
[2019-05-27_11:00:54]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:00:54]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:00:54]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:00:55]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:00] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000270EB0259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028F3DF45198>
[2019-05-27_11:00:56]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:00:56]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:00:56]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:00:57]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028F3DF459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000205F03A5198>
[2019-05-27_11:01:09]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:09]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:09]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:09]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000205F03A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AD9EF26128>
[2019-05-27_11:01:11]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:11]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:11]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:11]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AD9EF26978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002C812346128>
[2019-05-27_11:01:12]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:12]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:12]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:13]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002C812346978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021EEE5D5198>
[2019-05-27_11:01:14]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:14]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:14]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:15]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021EEE5D59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028FD9325198>
[2019-05-27_11:01:16]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:16]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:16]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:16]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028FD93259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002B5381F5198>
[2019-05-27_11:01:18]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:18]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:18]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:18]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002B5381F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FC6D585198>
[2019-05-27_11:01:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FC6D5859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F5302D5198>
[2019-05-27_11:01:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F5302D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000160E3FE6128>
[2019-05-27_11:01:23]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:23]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:23]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:23]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000160E3FE6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029029396128>
[2019-05-27_11:01:25]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:25]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:25]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:25]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029029396978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002525F795198>
[2019-05-27_11:01:27]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:27]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:27]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:27]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002525F7959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022CB83E5198>
[2019-05-27_11:01:29]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:29]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:29]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:29]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022CB83E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EE2C675198>
[2019-05-27_11:01:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EE2C6759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002106E8D6128>
[2019-05-27_11:01:43]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:43]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:43]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:43]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002106E8D6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000016593A65198>
[2019-05-27_11:01:45]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:45]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:45]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:45]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000016593A659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000130D53A5198>
[2019-05-27_11:01:46]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:46]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:46]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:47]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000130D53A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EF88455198>
[2019-05-27_11:01:48]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:48]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:48]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:49]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EF884559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020146055198>
[2019-05-27_11:01:50]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:50]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:50]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:50]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000201460559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A5C7396128>
[2019-05-27_11:01:52]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:52]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:52]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:52]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:01] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A5C7396978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F61EEB5198>
[2019-05-27_11:01:53]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:01:54]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:01:54]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:01:54]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:02] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F61EEB59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021081AC5198>
[2019-05-27_11:02:06]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:02:06]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:02:06]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:02:07]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:02] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021081AC59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001976CD45198>
[2019-05-27_11:02:08]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:02:08]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:02:08]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:02:08]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:02] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001976CD459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BD360B6128>
[2019-05-27_11:02:10]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:02:10]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:02:10]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:02:10]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
Login successful. (4.268827ms)

-----------------
Red - Discord Bot
-----------------
Greedie_Bot#9528

Connected to:
2 servers
33 channels
12 users

Prefix: `
Owner: Greedy#2233
11/17 active cogs with 76 commands
-----------------

Use this url to bring your bot to a server:
https://discordapp.com/oauth2/authorize?client_id=335349901275824131&scope=bot

Official server: https://discord.gg/red
Make sure to keep your bot updated. Select the 'Update' option from the launcher.
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BD360B6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000220287E6128>
[2019-05-27_11:12:04]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:12:04]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:12:04]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:12:05]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:12] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000220287E6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B0B3195198>
[2019-05-27_11:12:39]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:12:39]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:12:39]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:12:39]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:13] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B0B31959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000286A3DC5198>
[2019-05-27_11:13:14]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:13:14]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:13:14]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:13:14]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:13] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000286A3DC59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020397175198>
[2019-05-27_11:13:50]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:13:50]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:13:50]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:13:51]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:13] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000203971759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BCF4785198>
[2019-05-27_11:13:52]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:13:52]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:13:52]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:13:52]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:13] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BCF47859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019E87705198>
[2019-05-27_11:13:54]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:13:54]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:13:54]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:13:54]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:13] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019E877059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000015EEBE75198>
[2019-05-27_11:13:56]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:13:56]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:13:56]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:13:56]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:13] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000015EEBE759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BC1EEB5198>
[2019-05-27_11:13:57]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:13:57]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:13:57]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:13:58]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:13] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BC1EEB59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023753BC5198>
[2019-05-27_11:13:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:13:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:13:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:14:00]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:14] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023753BC59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DADC545198>
[2019-05-27_11:14:13]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:14:13]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:14:13]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:14:13]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:14] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DADC5459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F246656128>
[2019-05-27_11:14:15]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:14:15]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:14:15]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:14:15]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:14] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F246656978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000016A544F5198>
[2019-05-27_11:14:16]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:14:16]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:14:16]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:14:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:14] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000016A544F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002527FA65198>
[2019-05-27_11:14:18]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:14:18]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:14:18]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:14:18]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:14] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002527FA659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000292588F5198>
[2019-05-27_11:14:56]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:14:56]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:14:56]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:14:56]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000292588F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F00AA05198>
[2019-05-27_11:15:33]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:15:33]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:15:33]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:15:34]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F00AA059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002AE09B66128>
[2019-05-27_11:16:11]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:16:11]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:16:11]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:16:11]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002AE09B66978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028C97505198>
[2019-05-27_11:16:49]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:16:49]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:16:49]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:16:49]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[27/05/2019 11:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028C975059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019D81376128>
[2019-05-27_11:17:14]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-27_11:17:15]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-27_11:17:15]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-27_11:17:15]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
Login successful. (3.586202ms)

-----------------
Red - Discord Bot
-----------------
Greedie_Bot#9528

Connected to:
2 servers
33 channels
12 users

Prefix: `
Owner: Greedy#2233
11/17 active cogs with 76 commands
-----------------

Use this url to bring your bot to a server:
https://discordapp.com/oauth2/authorize?client_id=335349901275824131&scope=bot

Official server: https://discord.gg/red
Make sure to keep your bot updated. Select the 'Update' option from the launcher.
[2019-05-27_15:49:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config

initializing wallpaper scheduler
scheduling server: 225351701505376257 everybdy_hates_chwis
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
scheduling server: 266047323166081024 greedy_dev
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Added job "Wallpaper.post_auto" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:apscheduler.executors.default:Running job "Wallpaper.post_auto (trigger: cron[hour='18', minute='0'], next run at: 2019-05-28 18:00:00 MDT)" (scheduled at 2019-05-27 18:00:00-06:00)
[18:00:00]----------AUTO WP POST--------------------
posting to:
server:  225351701505376257   name: everybdy_hates_chwis
channel: 367824417398718464   name: wallpaper_chwis
server categories: ['Anime Scenery', '_Sekiro_Landscape']
read db, columns  : ['id', 'CategoryId', 'Path', 'Filename', 'CategoryName']
read db, retrieved: [5497, 63, 'D:\\Pictures\\Gaming\\Sekiro\\Landscape', 'sekiro_2019_05_11_06_20_13_598.jpg', '_Sekiro_Landscape']
checkrow type: <class 'NoneType'>
TRY #0, image not a duplicate, posting
writerow: [5497, 63, '_Sekiro_Landscape', 'D:\\Pictures\\Gaming\\Sekiro\\Landscape', 'sekiro_2019_05_11_06_20_13_598.jpg', 1]
filepath: D:\Pictures\Gaming\Sekiro\Landscape\sekiro_2019_05_11_06_20_13_598.jpg
posted image: D:\Pictures\Gaming\Sekiro\Landscape\sekiro_2019_05_11_06_20_13_598.jpg
saved posted image to writeDB
INFO:apscheduler.executors.default:Job "Wallpaper.post_auto (trigger: cron[hour='18', minute='0'], next run at: 2019-05-28 18:00:00 MDT)" executed successfully
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019D81376978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028309255198>
[2019-05-28_09:47:09]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:47:09]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:47:09]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:47:09]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000283092559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027EA7C85198>
[2019-05-28_09:47:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:47:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:47:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:47:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027EA7C859B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000293472F5198>
[2019-05-28_09:47:46]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:47:46]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:47:46]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:47:46]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000293472F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F44DBF5198>
[2019-05-28_09:47:47]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:47:47]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:47:47]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:47:48]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F44DBF59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020A6F5F5198>
[2019-05-28_09:47:49]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:47:49]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:47:49]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:47:49]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020A6F5F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001ECB15D5198>
[2019-05-28_09:47:51]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:47:51]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:47:51]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:47:51]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001ECB15D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000202138F5198>
[2019-05-28_09:47:53]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:47:53]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:47:53]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:47:53]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000202138F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022789935198>
[2019-05-28_09:47:54]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:47:54]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:47:54]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:47:55]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000227899359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B65FC15198>
[2019-05-28_09:47:56]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:47:56]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:47:56]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:47:57]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:47] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B65FC159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000160AFB86128>
[2019-05-28_09:47:58]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:47:58]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:47:58]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:47:58]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000160AFB86978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C947696128>
[2019-05-28_09:48:11]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:48:11]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:48:11]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:48:11]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C947696978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AA1B8D5198>
[2019-05-28_09:48:12]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:48:12]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:48:12]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:48:13]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AA1B8D59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001ADBAE75198>
[2019-05-28_09:48:14]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:48:14]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:48:14]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:48:15]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001ADBAE759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022868A85198>
[2019-05-28_09:48:16]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:48:16]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:48:16]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:48:16]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022868A859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020629635198>
[2019-05-28_09:48:18]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:48:18]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:48:18]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:48:18]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000206296359B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000207135A5198>
[2019-05-28_09:48:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:48:20]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:48:20]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:48:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000207135A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002225BDD5198>
[2019-05-28_09:48:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:48:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:48:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:48:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002225BDD59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F6F7D45198>
[2019-05-28_09:48:23]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:48:23]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:48:23]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:48:24]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F6F7D459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019D561B5198>
[2019-05-28_09:48:25]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:48:25]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:48:25]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:48:25]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019D561B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023AFFEF5198>
[2019-05-28_09:48:31]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:48:31]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:48:32]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:48:32]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023AFFEF59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FC29FB5198>
[2019-05-28_09:48:33]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:48:33]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:48:33]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:48:34]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FC29FB59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022357885198>
[2019-05-28_09:48:35]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:48:35]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:48:35]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:48:35]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000223578859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027205A45198>
[2019-05-28_09:48:48]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:48:48]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:48:48]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:48:48]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027205A459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002044DD55198>
[2019-05-28_09:48:49]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:48:50]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:48:50]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:48:50]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:48] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002044DD559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000015944DE5198>
[2019-05-28_09:48:51]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:48:51]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:48:51]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:48:52]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000015944DE59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019BDECD6128>
[2019-05-28_09:49:04]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:49:04]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:49:04]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:49:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019BDECD6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019CFD7F5198>
[2019-05-28_09:49:06]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:49:06]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:49:06]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:49:06]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019CFD7F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F38A045198>
[2019-05-28_09:49:07]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:49:07]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:49:07]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:49:08]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F38A0459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000200327A5198>
[2019-05-28_09:49:09]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:49:09]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:49:09]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:49:10]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000200327A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026763C75198>
[2019-05-28_09:49:17]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:49:17]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:49:17]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:49:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026763C759B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B757D06128>
[2019-05-28_09:49:18]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:49:18]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:49:18]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:49:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B757D06978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000153C0BF5198>
[2019-05-28_09:49:20]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:49:20]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:49:20]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:49:21]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000153C0BF59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C564C45198>
[2019-05-28_09:49:33]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:49:33]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:49:33]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:49:33]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C564C459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E49F916128>
[2019-05-28_09:49:35]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:49:35]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:49:35]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:49:35]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E49F916978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000182B1275198>
[2019-05-28_09:49:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:49:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:49:36]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:49:37]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000182B12759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028CFC625198>
[2019-05-28_09:49:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:49:38]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:49:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:49:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028CFC6259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002C482835198>
[2019-05-28_09:49:51]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:49:51]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:49:51]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:49:51]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002C4828359B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018182455198>
[2019-05-28_09:49:52]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:49:53]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:49:53]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:49:53]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000181824559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CCA7DC5198>
[2019-05-28_09:49:54]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:49:54]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:49:54]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:49:55]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:49] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CCA7DC59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000257672B5198>
[2019-05-28_09:49:56]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:49:56]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:49:56]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:49:56]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:50] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000257672B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002389A1E5198>
[2019-05-28_09:50:03]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:50:03]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:50:03]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:50:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:50] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002389A1E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D89A325198>
[2019-05-28_09:50:05]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:50:05]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:50:05]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:50:06]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:50] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D89A3259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025D8B8F5198>
[2019-05-28_09:50:07]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:50:07]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:50:07]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:50:07]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:50] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025D8B8F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FEBD105198>
[2019-05-28_09:50:20]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:50:20]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:50:20]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:50:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:50] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FEBD1059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026678E75198>
[2019-05-28_09:50:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:50:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:50:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:50:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:50] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026678E759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E90E3D5198>
[2019-05-28_09:50:23]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:50:23]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:50:23]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:50:23]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:50] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E90E3D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021D91085198>
[2019-05-28_09:50:25]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:50:25]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:50:25]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:50:25]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:50] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021D910859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001427A265198>
[2019-05-28_09:50:27]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:50:27]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:50:27]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:50:27]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:50] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001427A2659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021C02835198>
[2019-05-28_09:50:28]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:50:28]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:50:28]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:50:29]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:50] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021C028359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AB4BB85198>
[2019-05-28_09:50:30]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:50:30]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:50:30]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:50:31]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:50] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AB4BB859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002CE3AF75198>
[2019-05-28_09:50:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:50:38]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:50:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:50:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:50] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002CE3AF759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001615B145198>
[2019-05-28_09:50:39]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:50:39]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:50:39]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:50:40]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:50] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001615B1459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019E07A85198>
[2019-05-28_09:50:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:50:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:50:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:50:41]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:50] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019E07A859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000201344E5198>
[2019-05-28_09:50:54]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:50:54]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:50:54]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:50:54]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:50] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000201344E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C76E5D6128>
[2019-05-28_09:50:55]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:50:56]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:50:56]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:50:56]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:50] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C76E5D6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E1C91B5198>
[2019-05-28_09:50:57]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:50:57]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:50:57]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:50:58]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:51] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E1C91B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002746DDF6128>
[2019-05-28_09:51:10]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:51:10]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:51:10]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:51:10]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:51] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002746DDF6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000237AD215198>
[2019-05-28_09:51:12]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:51:12]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:51:12]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:51:12]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:51] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000237AD2159B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E882456128>
[2019-05-28_09:51:13]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:51:14]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:51:14]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:51:14]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:51] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E882456978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002CC75D85198>
[2019-05-28_09:51:15]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:51:15]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:51:15]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:51:16]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:51] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002CC75D859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029FD3126128>
[2019-05-28_09:51:17]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:51:17]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:51:17]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:51:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:51] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029FD3126978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E9FB8D5198>
[2019-05-28_09:51:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:51:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:51:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:51:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:51] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E9FB8D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002656E165198>
[2019-05-28_09:51:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:51:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:51:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:51:21]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:51] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002656E1659B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000169286E5198>
[2019-05-28_09:51:22]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:51:22]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:51:22]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:51:23]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:51] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000169286E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DB14465198>
[2019-05-28_09:51:24]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:51:24]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:51:24]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:51:25]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:51] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DB144659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002671AD15198>
[2019-05-28_09:51:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:51:26]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:51:26]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:51:27]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:51] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002671AD159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000180E4F15198>
[2019-05-28_09:51:28]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:51:28]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:51:28]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:51:28]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:51] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000180E4F159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A6C38F5198>
[2019-05-28_09:51:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:51:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:51:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:51:41]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:51] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A6C38F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000012A44016128>
[2019-05-28_09:51:42]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:51:42]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:51:42]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:51:43]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:51] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000012A44016978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E1FCD55198>
[2019-05-28_09:51:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:51:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:51:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:51:45]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:51] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E1FCD559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E08C1C5198>
[2019-05-28_09:51:57]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:51:57]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:51:57]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:51:57]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:51] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E08C1C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019D74375198>
[2019-05-28_09:51:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:51:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:51:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:51:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:51] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019D743759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000199EB3C5198>
[2019-05-28_09:52:00]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:52:00]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:52:00]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:52:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:52] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000199EB3C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000147C4A95198>
[2019-05-28_09:52:02]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:52:02]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:52:02]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:52:03]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:52] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000147C4A959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023487295198>
[2019-05-28_09:52:04]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:52:04]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:52:04]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:52:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:52] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000234872959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001ED812E5198>
[2019-05-28_09:52:11]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:52:11]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:52:11]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:52:12]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:52] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001ED812E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000245FBFC5198>
[2019-05-28_09:52:13]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:52:13]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:52:13]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:52:13]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:52] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000245FBFC59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AA3BB05198>
[2019-05-28_09:52:15]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:52:15]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:52:15]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:52:15]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:52] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AA3BB059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B8C1CB6128>
[2019-05-28_09:52:27]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:52:27]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:52:27]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:52:28]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:52] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B8C1CB6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002D177005198>
[2019-05-28_09:52:29]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:52:29]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:52:29]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:52:30]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:52] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002D1770059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002240C9C5198>
[2019-05-28_09:52:31]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:52:31]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:52:31]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:52:31]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:52] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002240C9C59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002AA812A5198>
[2019-05-28_09:52:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:52:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:52:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:52:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:52] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002AA812A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EAE24C5198>
[2019-05-28_09:52:45]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:52:45]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:52:45]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:52:46]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:52] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EAE24C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000195DF8F5198>
[2019-05-28_09:52:47]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:52:47]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:52:47]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:52:48]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:52] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000195DF8F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BEC1785198>
[2019-05-28_09:52:49]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:52:49]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:52:49]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:52:49]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:52] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BEC17859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022791F95198>
[2019-05-28_09:52:51]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:52:51]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:52:51]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:52:51]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:52] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022791F959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000178BB2C5198>
[2019-05-28_09:52:58]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:52:58]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:52:58]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:52:58]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:52] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000178BB2C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028338865198>
[2019-05-28_09:53:00]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:53:00]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:53:00]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:53:00]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000283388659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000015F21FE5198>
[2019-05-28_09:53:02]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:53:02]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:53:02]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:53:02]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000015F21FE59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024AC1BA6128>
[2019-05-28_09:53:14]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:53:14]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:53:14]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:53:15]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024AC1BA6940>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BF85505198>
[2019-05-28_09:53:16]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:53:16]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:53:16]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:53:16]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 09:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BF855059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002762C7D5198>
[2019-05-28_09:53:18]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_09:53:18]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_09:53:18]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_09:53:18]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
Login successful. (3.068248ms)

-----------------
Red - Discord Bot
-----------------
Greedie_Bot#9528

Connected to:
2 servers
33 channels
12 users

Prefix: `
Owner: Greedy#2233
11/17 active cogs with 76 commands
-----------------

Use this url to bring your bot to a server:
https://discordapp.com/oauth2/authorize?client_id=335349901275824131&scope=bot

Official server: https://discord.gg/red
Make sure to keep your bot updated. Select the 'Update' option from the launcher.
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002762C7D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A819A95198>
[2019-05-28_10:15:34]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:15:34]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:15:34]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:15:34]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A819A959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F0EC555198>
[2019-05-28_10:15:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:15:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:15:36]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:15:36]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F0EC5559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000199CF935198>
[2019-05-28_10:15:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:15:38]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:15:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:15:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000199CF9359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001ACEED65198>
[2019-05-28_10:15:39]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:15:39]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:15:39]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:15:40]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001ACEED659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002C5E4CD5198>
[2019-05-28_10:15:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:15:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:15:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:15:41]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002C5E4CD59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E0B7155198>
[2019-05-28_10:15:43]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:15:43]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:15:43]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:15:43]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E0B71559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C0F60D6128>
[2019-05-28_10:15:50]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:15:50]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:15:50]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:15:51]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C0F60D6940>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EE44EF5198>
[2019-05-28_10:15:52]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:15:52]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:15:52]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:15:52]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EE44EF59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000254525C5198>
[2019-05-28_10:15:54]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:15:54]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:15:54]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:15:54]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000254525C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000016F90415198>
[2019-05-28_10:15:55]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:15:56]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:15:56]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:15:56]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000016F904159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002D466285198>
[2019-05-28_10:15:57]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:15:57]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:15:57]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:15:58]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:15] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002D4662859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020E98686128>
[2019-05-28_10:15:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:15:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:15:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:15:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020E98686978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000241E5245198>
[2019-05-28_10:16:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:16:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:16:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:16:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000241E52459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002106C7F5198>
[2019-05-28_10:16:03]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:16:03]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:16:03]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:16:03]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002106C7F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D1A5D15198>
[2019-05-28_10:16:04]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:16:04]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:16:04]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:16:05]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D1A5D159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002151CE15198>
[2019-05-28_10:16:06]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:16:06]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:16:06]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:16:07]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002151CE159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026C44045198>
[2019-05-28_10:16:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:16:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:16:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:16:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026C440459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002E2FD275198>
[2019-05-28_10:16:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:16:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:16:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:16:21]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002E2FD2759B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000240F50B6128>
[2019-05-28_10:16:22]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:16:22]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:16:22]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:16:23]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000240F50B6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002EF1EDC5198>
[2019-05-28_10:16:24]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:16:24]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:16:24]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:16:25]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002EF1EDC59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001ABA6905198>
[2019-05-28_10:16:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:16:26]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:16:26]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:16:26]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001ABA69059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FC47B05198>
[2019-05-28_10:16:28]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:16:28]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:16:28]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:16:28]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FC47B059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024DD60C5198>
[2019-05-28_10:16:40]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:16:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:16:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:16:41]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024DD60C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B2CA015198>
[2019-05-28_10:16:42]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:16:42]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:16:42]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:16:43]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B2CA0159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A0EB815198>
[2019-05-28_10:16:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:16:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:16:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:16:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A0EB8159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021C16C15198>
[2019-05-28_10:16:46]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:16:46]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:16:46]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:16:46]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021C16C159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F6C96B5198>
[2019-05-28_10:16:48]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:16:48]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:16:48]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:16:48]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:16] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F6C96B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D74AA96128>
[2019-05-28_10:16:49]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:16:49]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:16:49]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:16:50]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D74AA96978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AF17CA5198>
[2019-05-28_10:17:02]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:17:02]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:17:02]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:17:02]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AF17CA59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E4BFA65198>
[2019-05-28_10:17:04]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:17:04]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:17:04]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:17:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E4BFA659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000246DB815198>
[2019-05-28_10:17:06]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:17:06]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:17:06]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:17:06]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000246DB8159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E8FDFC5198>
[2019-05-28_10:17:07]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:17:07]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:17:07]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:17:08]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E8FDFC59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AB7D615198>
[2019-05-28_10:17:09]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:17:09]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:17:09]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:17:10]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AB7D6159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B866ED5198>
[2019-05-28_10:17:16]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:17:17]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:17:17]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:17:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B866ED59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AA3D605198>
[2019-05-28_10:17:18]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:17:18]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:17:18]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:17:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AA3D6059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000188620B5198>
[2019-05-28_10:17:20]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:17:20]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:17:20]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:17:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000188620B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D445E35198>
[2019-05-28_10:17:33]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:17:33]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:17:33]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:17:33]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D445E359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A7AAB16128>
[2019-05-28_10:17:34]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:17:35]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:17:35]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:17:35]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A7AAB16978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FFA0F86128>
[2019-05-28_10:17:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:17:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:17:36]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:17:37]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FFA0F86978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C095D15198>
[2019-05-28_10:17:49]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:17:49]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:17:49]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:17:49]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C095D159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019E36BC5198>
[2019-05-28_10:17:51]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:17:51]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:17:51]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:17:51]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019E36BC59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BBC3C35198>
[2019-05-28_10:17:52]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:17:52]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:17:53]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:17:53]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BBC3C359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029226215198>
[2019-05-28_10:17:54]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:17:54]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:17:54]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:17:55]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000292262159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001ABE1E65198>
[2019-05-28_10:17:56]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:17:56]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:17:56]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:17:56]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001ABE1E659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E62DDE5198>
[2019-05-28_10:17:58]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:17:58]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:17:58]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:17:58]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:17] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E62DDE59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C9EEE35198>
[2019-05-28_10:18:00]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:18:00]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:18:00]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:18:00]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C9EEE359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023F63255198>
[2019-05-28_10:18:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:18:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:18:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:18:02]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023F632559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AF55F15198>
[2019-05-28_10:18:03]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:18:03]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:18:03]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:18:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AF55F159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024D75466128>
[2019-05-28_10:18:05]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:18:05]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:18:05]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:18:06]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024D75466978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000180771D5198>
[2019-05-28_10:18:07]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:18:07]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:18:07]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:18:07]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000180771D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023A5F775198>
[2019-05-28_10:18:20]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:18:20]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:18:20]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:18:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023A5F7759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C6C6735198>
[2019-05-28_10:18:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:18:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:18:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:18:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C6C67359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000199287E5198>
[2019-05-28_10:18:23]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:18:23]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:18:23]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:18:24]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000199287E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025F35445198>
[2019-05-28_10:18:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:18:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:18:36]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:18:36]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025F354459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D8EAA55198>
[2019-05-28_10:18:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:18:38]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:18:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:18:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D8EAA559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022CE2C45198>
[2019-05-28_10:18:39]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:18:39]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:18:39]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:18:40]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022CE2C459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017EE6835198>
[2019-05-28_10:18:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:18:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:18:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:18:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017EE68359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020895725198>
[2019-05-28_10:18:43]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:18:43]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:18:43]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:18:43]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000208957259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002909C6E5198>
[2019-05-28_10:18:56]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:18:56]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:18:56]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:18:56]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002909C6E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F6B3455198>
[2019-05-28_10:18:57]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:18:57]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:18:57]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:18:58]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:18] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F6B34559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C6EAFD5198>
[2019-05-28_10:18:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:18:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:18:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:18:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C6EAFD59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024488035198>
[2019-05-28_10:19:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:19:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:19:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:19:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000244880359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020327A25198>
[2019-05-28_10:19:03]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:19:03]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:19:03]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:19:03]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020327A259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CB8AC15198>
[2019-05-28_10:19:15]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:19:15]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:19:15]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:19:16]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CB8AC159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000158511E5198>
[2019-05-28_10:19:17]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:19:17]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:19:17]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:19:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000158511E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F2CC3C5198>
[2019-05-28_10:19:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:19:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:19:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:19:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F2CC3C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021648105198>
[2019-05-28_10:19:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:19:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:19:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:19:21]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000216481059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002453C015198>
[2019-05-28_10:19:22]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:19:22]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:19:22]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:19:23]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002453C0159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029AEF605198>
[2019-05-28_10:19:24]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:19:24]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:19:24]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:19:24]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029AEF6059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000294C6A15198>
[2019-05-28_10:19:31]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:19:31]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:19:31]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:19:32]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000294C6A159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000016456575198>
[2019-05-28_10:19:33]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:19:33]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:19:33]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:19:34]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000164565759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DF05BA5198>
[2019-05-28_10:19:35]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:19:35]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:19:35]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:19:35]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DF05BA59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023CCC025198>
[2019-05-28_10:19:48]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:19:48]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:19:48]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:19:48]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023CCC0259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E041165198>
[2019-05-28_10:19:49]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:19:49]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:19:49]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:19:50]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:19] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E0411659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002089E5B5198>
[2019-05-28_10:19:51]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:19:51]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:19:51]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:19:52]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002089E5B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002CB6FD35198>
[2019-05-28_10:20:04]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:04]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:04]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:20:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002CB6FD359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028275665198>
[2019-05-28_10:20:06]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:06]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:06]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:20:06]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000282756659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000279930B5198>
[2019-05-28_10:20:07]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:07]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:07]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:20:08]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000279930B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002291D075198>
[2019-05-28_10:20:09]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:09]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:09]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:20:10]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002291D0759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000247652C5198>
[2019-05-28_10:20:11]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:11]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:11]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:20:11]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000247652C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022CAA5F5198>
[2019-05-28_10:20:13]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:13]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:13]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:20:13]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022CAA5F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002232B795198>
[2019-05-28_10:20:14]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:14]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:14]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:20:15]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002232B7959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019474926128>
[2019-05-28_10:20:16]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:16]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:16]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:20:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019474926978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DF7BB85198>
[2019-05-28_10:20:18]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:18]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:18]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:20:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DF7BB859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020FC9195198>
[2019-05-28_10:20:20]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:20]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:20]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:20:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020FC91959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026A25C35198>
[2019-05-28_10:20:22]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:22]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:22]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:20:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026A25C359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000174F2B25198>
[2019-05-28_10:20:34]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:34]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:34]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:20:35]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000174F2B259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D2534A6128>
[2019-05-28_10:20:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:36]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:20:37]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D2534A6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A04F085198>
[2019-05-28_10:20:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:38]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:20:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A04F0859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002375A695198>
[2019-05-28_10:20:40]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:40]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:40]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:20:40]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002375A6959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000266EB7F5198>
[2019-05-28_10:20:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:42]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:20:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000266EB7F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002B3E0E05198>
[2019-05-28_10:20:43]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:43]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:43]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:20:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002B3E0E059B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020FB0F55198>
[2019-05-28_10:20:56]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:56]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:56]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:20:56]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020FB0F559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023A84185198>
[2019-05-28_10:20:58]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:58]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:58]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:20:58]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:20] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023A841859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E13AE55198>
[2019-05-28_10:20:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:20:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:20:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:21:00]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:21] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E13AE559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000158F4BE5198>
[2019-05-28_10:21:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:21:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:21:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:21:02]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:21] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000158F4BE59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DEA41A6128>
[2019-05-28_10:21:09]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:21:09]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:21:09]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:21:09]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:21] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DEA41A6940>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019E1C2A5198>
[2019-05-28_10:21:10]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:21:10]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:21:10]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:21:11]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:21] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019E1C2A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C58F605198>
[2019-05-28_10:21:12]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:21:12]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:21:12]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:21:12]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:21] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C58F6059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A58A036128>
[2019-05-28_10:21:25]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:21:25]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:21:25]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:21:25]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:21] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A58A036978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F4D4AD5198>
[2019-05-28_10:21:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:21:27]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:21:27]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:21:27]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:21] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F4D4AD59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000256BE355198>
[2019-05-28_10:21:28]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:21:28]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:21:28]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:21:29]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:21] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000256BE3559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000239FBFE5198>
[2019-05-28_10:21:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:21:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:21:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:21:41]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
Login successful. (3.118613ms)

-----------------
Red - Discord Bot
-----------------
Greedie_Bot#9528

Connected to:
2 servers
33 channels
12 users

Prefix: `
Owner: Greedy#2233
11/17 active cogs with 76 commands
-----------------

Use this url to bring your bot to a server:
https://discordapp.com/oauth2/authorize?client_id=335349901275824131&scope=bot

Official server: https://discord.gg/red
Make sure to keep your bot updated. Select the 'Update' option from the launcher.
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000239FBFE59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E4E2885198>
[2019-05-28_10:39:08]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:39:08]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:39:08]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:39:09]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:39] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E4E28859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000266296A5198>
[2019-05-28_10:39:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:39:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:39:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:39:21]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:39] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000266296A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FECCF85198>
[2019-05-28_10:39:23]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:39:23]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:39:23]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:39:23]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:39] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FECCF859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000016F1B065198>
[2019-05-28_10:39:24]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:39:24]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:39:25]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:39:25]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:39] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000016F1B0659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002075C115198>
[2019-05-28_10:39:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:39:26]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:39:26]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:39:27]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:39] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002075C1159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BD67C85198>
[2019-05-28_10:39:28]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:39:28]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:39:28]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:39:28]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:39] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BD67C859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025B4C736128>
[2019-05-28_10:39:30]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:39:30]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:39:30]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:39:30]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:40] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025B4C736978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021258135198>
[2019-05-28_10:40:08]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:40:08]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:40:08]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:40:08]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:40] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000212581359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E027295198>
[2019-05-28_10:40:09]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:40:09]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:40:09]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:40:10]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:40] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E0272959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000206B99B5198>
[2019-05-28_10:40:11]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:40:11]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:40:11]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:40:12]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:40] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000206B99B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000013016795198>
[2019-05-28_10:40:13]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:40:13]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:40:13]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:40:13]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:40] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000130167959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000161BAE25198>
[2019-05-28_10:40:15]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:40:15]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:40:15]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:40:15]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:40] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000161BAE259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F155596128>
[2019-05-28_10:40:16]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:40:17]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:40:17]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:40:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:40] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F155596940>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C99C3E5198>
[2019-05-28_10:40:18]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:40:18]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:40:18]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:40:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:40] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C99C3E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F4C44D5198>
[2019-05-28_10:40:32]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:40:32]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:40:32]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:40:32]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:40] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F4C44D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000262B8015198>
[2019-05-28_10:40:34]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:40:34]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:40:34]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:40:34]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:40] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000262B80159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000290CC3F5198>
[2019-05-28_10:40:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:40:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:40:36]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:40:36]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:40] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000290CC3F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000284C8145198>
[2019-05-28_10:40:37]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:40:37]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:40:37]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:40:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:40] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000284C81459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025DC5355198>
[2019-05-28_10:40:51]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:40:51]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:40:51]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:40:52]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:40] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025DC53559B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019CE1795198>
[2019-05-28_10:40:53]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:40:53]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:40:53]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:40:53]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:40] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019CE17959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022208985198>
[2019-05-28_10:40:55]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:40:55]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:40:55]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:40:55]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:40] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000222089859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000113CB576128>
[2019-05-28_10:40:56]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:40:56]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:40:56]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:40:57]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:41] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000113CB576978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023CB29D6128>
[2019-05-28_10:41:10]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:41:10]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:41:10]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:41:10]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:41] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023CB29D6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018AAB9E5198>
[2019-05-28_10:41:12]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:41:12]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:41:12]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:41:12]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:41] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018AAB9E59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020083646128>
[2019-05-28_10:41:14]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:41:14]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:41:14]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:41:14]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:41] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020083646978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025E37BA5198>
[2019-05-28_10:41:27]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:41:27]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:41:27]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:41:28]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:41] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025E37BA59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000012A13965198>
[2019-05-28_10:41:29]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:41:29]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:41:29]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:41:29]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:41] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000012A139659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021863F85198>
[2019-05-28_10:41:31]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:41:31]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:41:31]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:41:31]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:41] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021863F859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000169664E5198>
[2019-05-28_10:41:33]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:41:33]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:41:33]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:41:33]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:41] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000169664E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022E624F5198>
[2019-05-28_10:41:34]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:41:34]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:41:34]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:41:35]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:41] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022E624F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BDB9685198>
[2019-05-28_10:41:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:41:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:41:36]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:41:37]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:41] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BDB96859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D5C5305198>
[2019-05-28_10:41:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:41:38]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:41:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:41:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:41] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D5C53059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B232065198>
[2019-05-28_10:41:40]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:41:40]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:41:40]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:41:40]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:41] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B2320659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CE41906128>
[2019-05-28_10:41:46]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:41:46]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:41:46]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:41:47]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:41] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CE41906978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CF68925198>
[2019-05-28_10:41:48]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:41:48]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:41:48]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:41:48]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:41] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CF689259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000193587D5198>
[2019-05-28_10:41:50]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:41:50]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:41:50]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:41:50]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:42] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000193587D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000014CFACA5198>
[2019-05-28_10:42:03]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:42:03]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:42:03]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:42:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:42] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000014CFACA59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000287DA615198>
[2019-05-28_10:42:05]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:42:05]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:42:05]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:42:06]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:42] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000287DA6159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029C13035198>
[2019-05-28_10:42:07]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:42:07]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:42:07]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:42:07]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:42] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029C130359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020099A65198>
[2019-05-28_10:42:09]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:42:09]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:42:09]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:42:09]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:42] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020099A659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000248ADAE6128>
[2019-05-28_10:42:22]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:42:22]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:42:22]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:42:23]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:42] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000248ADAE6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020117A75198>
[2019-05-28_10:42:24]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:42:24]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:42:24]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:42:25]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:42] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020117A759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AB22C85198>
[2019-05-28_10:42:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:42:26]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:42:26]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:42:26]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:42] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AB22C859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F668425128>
[2019-05-28_10:42:39]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:42:40]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:42:40]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:42:40]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:42] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F668425978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D382035198>
[2019-05-28_10:42:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:42:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:42:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:42:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:42] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D3820359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000190B9586128>
[2019-05-28_10:42:43]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:42:43]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:42:43]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:42:43]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:42] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000190B9586978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F70C035198>
[2019-05-28_10:42:45]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:42:45]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:42:45]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:42:45]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:42] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F70C0359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021CE7AF5198>
[2019-05-28_10:42:58]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:42:58]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:42:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:42:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:42] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021CE7AF59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000165F0335198>
[2019-05-28_10:43:00]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:00]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:00]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000165F03359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C1548D5198>
[2019-05-28_10:43:02]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:02]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:02]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:02]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C1548D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017E92A25198>
[2019-05-28_10:43:04]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:04]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:04]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017E92A259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BA4A276128>
[2019-05-28_10:43:17]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:17]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:17]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:18]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BA4A276978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029957FE6128>
[2019-05-28_10:43:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029957FE6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000277EDD75198>
[2019-05-28_10:43:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:21]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000277EDD759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017F90BD5198>
[2019-05-28_10:43:23]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:23]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:23]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:23]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017F90BD59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002210D645198>
[2019-05-28_10:43:25]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:25]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:25]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:25]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002210D6459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000014DD8395198>
[2019-05-28_10:43:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:38]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:39]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000014DD83959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000121CC115198>
[2019-05-28_10:43:40]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:40]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:40]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:40]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000121CC1159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DE3A1E5198>
[2019-05-28_10:43:42]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:42]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:42]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DE3A1E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000203C32A5198>
[2019-05-28_10:43:43]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000203C32A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020DA0A75198>
[2019-05-28_10:43:45]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:45]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:45]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:46]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020DA0A759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025746AE5198>
[2019-05-28_10:43:47]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:47]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:47]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:47]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025746AE59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CF92C35198>
[2019-05-28_10:43:49]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:49]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:49]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:49]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CF92C359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C457E25198>
[2019-05-28_10:43:51]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:51]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:51]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:51]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C457E259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000016BE5A05198>
[2019-05-28_10:43:52]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:52]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:52]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:53]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000016BE5A059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C956B66128>
[2019-05-28_10:43:55]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:55]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:55]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:56]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C956B66978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000273B1F45198>
[2019-05-28_10:43:57]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:57]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:57]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:58]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:43] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000273B1F459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000242EEF75198>
[2019-05-28_10:43:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:43:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:43:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:43:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:44] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000242EEF759B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002380A7A5198>
[2019-05-28_10:44:13]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:44:13]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:44:13]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:44:13]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:44] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002380A7A59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028240005198>
[2019-05-28_10:44:14]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:44:14]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:44:14]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:44:15]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:44] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000282400059B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027ADC4C5198>
[2019-05-28_10:44:16]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:44:16]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:44:16]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:44:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
Login successful. (3.169073ms)

-----------------
Red - Discord Bot
-----------------
Greedie_Bot#9528

Connected to:
2 servers
33 channels
12 users

Prefix: `
Owner: Greedy#2233
11/17 active cogs with 76 commands
-----------------

Use this url to bring your bot to a server:
https://discordapp.com/oauth2/authorize?client_id=335349901275824131&scope=bot

Official server: https://discord.gg/red
Make sure to keep your bot updated. Select the 'Update' option from the launcher.
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027ADC4C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000293D5145198>
[2019-05-28_10:52:50]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:52:50]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:52:50]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:52:50]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000293D51459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D4A34C5198>
[2019-05-28_10:53:15]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:53:16]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:53:16]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:53:16]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D4A34C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A65D9B5198>
[2019-05-28_10:53:17]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:53:17]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:53:17]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:53:18]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A65D9B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000257D2A65198>
[2019-05-28_10:53:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:53:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:53:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:53:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000257D2A659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002075CC65198>
[2019-05-28_10:53:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:53:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:53:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:53:21]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002075CC659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002658B905198>
[2019-05-28_10:53:23]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:53:23]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:53:23]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:53:23]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002658B9059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000274F6816128>
[2019-05-28_10:53:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:53:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:53:36]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:53:37]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000274F6816978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018335B26128>
[2019-05-28_10:53:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:53:38]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:53:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:53:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:53] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018335B26978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AABC585198>
[2019-05-28_10:53:40]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:53:40]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:53:40]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:53:40]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AABC5859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DEE5975198>
[2019-05-28_10:54:17]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:54:17]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:54:17]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:54:18]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DEE59759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002906E465198>
[2019-05-28_10:54:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:54:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:54:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:54:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002906E4659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022E9B645198>
[2019-05-28_10:54:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:54:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:54:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:54:21]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022E9B6459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021CF4F35198>
[2019-05-28_10:54:23]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:54:23]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:54:23]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:54:23]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021CF4F359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CB121E5198>
[2019-05-28_10:54:25]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:54:25]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:54:25]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:54:25]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001CB121E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000012091635198>
[2019-05-28_10:54:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:54:26]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:54:26]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:54:27]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000120916359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018104835198>
[2019-05-28_10:54:28]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:54:28]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:54:28]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:54:29]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000181048359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022BB36E5198>
[2019-05-28_10:54:30]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:54:30]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:54:30]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:54:30]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022BB36E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002255CD46128>
[2019-05-28_10:54:32]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:54:32]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:54:32]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:54:32]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002255CD46978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C66B4E5198>
[2019-05-28_10:54:34]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:54:34]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:54:34]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:54:34]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C66B4E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002172DC35198>
[2019-05-28_10:54:47]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:54:47]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:54:47]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:54:48]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002172DC359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DEE4925198>
[2019-05-28_10:54:49]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:54:49]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:54:49]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:54:49]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DEE49259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023CA2B85198>
[2019-05-28_10:54:51]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:54:51]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:54:51]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:54:51]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023CA2B859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000010C06575198>
[2019-05-28_10:54:52]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:54:53]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:54:53]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:54:53]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000010C065759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D504B16128>
[2019-05-28_10:54:54]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:54:54]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:54:54]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:54:55]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:54] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001D504B16978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001974C335198>
[2019-05-28_10:54:56]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:54:56]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:54:56]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:54:57]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001974C3359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FB92FF5198>
[2019-05-28_10:55:10]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:55:10]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:55:10]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:55:10]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FB92FF59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000206D0B45198>
[2019-05-28_10:55:12]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:55:12]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:55:12]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:55:12]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000206D0B459E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023438CA6128>
[2019-05-28_10:55:13]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:55:13]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:55:13]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:55:14]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023438CA6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019CE4855198>
[2019-05-28_10:55:15]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:55:15]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:55:15]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:55:16]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000019CE48559E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021B837D5198>
[2019-05-28_10:55:17]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:55:17]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:55:17]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:55:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021B837D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000012B41E25198>
[2019-05-28_10:55:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:55:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:55:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:55:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000012B41E259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022193E35198>
[2019-05-28_10:55:20]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:55:20]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:55:20]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:55:21]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022193E359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000204E6C95198>
[2019-05-28_10:55:34]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:55:34]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:55:34]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:55:35]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000204E6C959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000181D8385198>
[2019-05-28_10:55:36]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:55:36]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:55:36]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:55:36]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000181D83859B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000275C6B15198>
[2019-05-28_10:55:38]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:55:38]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:55:38]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:55:38]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000275C6B159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000015F3D956128>
[2019-05-28_10:55:40]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:55:40]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:55:40]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:55:40]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000015F3D956978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001692C9D5198>
[2019-05-28_10:55:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:55:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:55:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:55:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001692C9D59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002995B6C6128>
[2019-05-28_10:55:43]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:55:43]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:55:43]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:55:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002995B6C6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E684296128>
[2019-05-28_10:55:45]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:55:45]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:55:45]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:55:45]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001E684296978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021E50FA5198>
[2019-05-28_10:55:53]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:55:53]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:55:53]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:55:54]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021E50FA59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000155CAF15198>
[2019-05-28_10:55:55]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:55:55]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:55:55]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:55:55]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000155CAF159E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017E35816128>
[2019-05-28_10:55:57]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:55:57]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:55:57]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:55:57]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000017E35816978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FA36676128>
[2019-05-28_10:55:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:55:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:55:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:55:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:55] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FA36676978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020A999E5198>
[2019-05-28_10:56:00]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:00]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:00]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020A999E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000013A436C5198>
[2019-05-28_10:56:02]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:02]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:02]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:03]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000013A436C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021CC3E95198>
[2019-05-28_10:56:04]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:04]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:04]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021CC3E959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F4DAEE5198>
[2019-05-28_10:56:06]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:06]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:06]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:06]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F4DAEE59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000204F5485198>
[2019-05-28_10:56:07]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:08]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:08]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:08]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000204F54859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024F4AD05198>
[2019-05-28_10:56:09]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:09]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:09]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:10]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000024F4AD059E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000211BF835198>
[2019-05-28_10:56:18]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:18]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:18]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:18]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000211BF8359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B24DB95198>
[2019-05-28_10:56:19]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B24DB959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000200A35C6128>
[2019-05-28_10:56:21]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:21]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:21]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000200A35C6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023C667E5198>
[2019-05-28_10:56:23]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:23]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:23]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:23]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000023C667E59B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F027EA5198>
[2019-05-28_10:56:25]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:25]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:25]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:25]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F027EA59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002978CD75198>
[2019-05-28_10:56:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:27]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:27]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:27]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002978CD759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A96A7C5198>
[2019-05-28_10:56:28]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:28]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:28]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:29]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A96A7C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000025427195198>
[2019-05-28_10:56:30]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:30]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:30]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:30]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000254271959B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A18E5B5198>
[2019-05-28_10:56:32]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:32]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:32]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:32]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A18E5B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A56B716128>
[2019-05-28_10:56:34]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:34]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:34]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:34]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A56B716978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FDB6375198>
[2019-05-28_10:56:42]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:42]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:42]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:42]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FDB63759B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002364A1B5198>
[2019-05-28_10:56:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:44]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002364A1B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027DBD4B5198>
[2019-05-28_10:56:45]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:45]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:45]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:46]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:56] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027DBD4B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BEC63F5198>
[2019-05-28_10:56:59]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:56:59]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:56:59]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:56:59]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001BEC63F59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020018725198>
[2019-05-28_10:57:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:57:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:57:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:57:01]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000200187259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021B22375198>
[2019-05-28_10:57:03]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:57:03]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:57:03]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:57:03]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021B223759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020FA75C5198>
[2019-05-28_10:57:16]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:57:16]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:57:16]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:57:17]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020FA75C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A5481F6128>
[2019-05-28_10:57:18]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:57:18]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:57:18]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:57:18]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002A5481F6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002238BA86128>
[2019-05-28_10:57:20]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:57:20]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:57:20]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:57:20]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002238BA86978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AB6B695198>
[2019-05-28_10:57:22]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:57:22]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:57:22]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:57:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AB6B6959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026C61295198>
[2019-05-28_10:57:23]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:57:23]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:57:23]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:57:24]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000026C612959B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000015A90185198>
[2019-05-28_10:57:37]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:57:37]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:57:37]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:57:37]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000015A901859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002458A835198>
[2019-05-28_10:57:39]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:57:39]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:57:39]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:57:39]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002458A8359B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018D566B5198>
[2019-05-28_10:57:41]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:57:41]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:57:41]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:57:41]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000018D566B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000162616B5198>
[2019-05-28_10:57:42]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:57:42]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:57:42]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:57:43]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000162616B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FF1F3C5198>
[2019-05-28_10:57:44]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:57:44]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:57:44]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:57:45]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001FF1F3C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002067FA85198>
[2019-05-28_10:57:58]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:57:58]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:57:58]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:57:58]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:57] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002067FA859E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021CDA0C5198>
[2019-05-28_10:58:00]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:58:00]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:58:00]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:58:00]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000021CDA0C59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B7256B6128>
[2019-05-28_10:58:01]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:58:01]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:58:01]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:58:02]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001B7256B6978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EAFC295198>
[2019-05-28_10:58:03]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:58:03]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:58:03]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:58:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001EAFC2959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000027586835198>
[2019-05-28_10:58:05]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:58:05]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:58:05]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:58:05]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000275868359B0>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F835675198>
[2019-05-28_10:58:18]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:58:19]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:58:19]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:58:19]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001F8356759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002204C165198>
[2019-05-28_10:58:20]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:58:20]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:58:20]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:58:21]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002204C1659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000287473E5198>
[2019-05-28_10:58:22]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:58:22]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:58:22]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:58:22]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000287473E59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DAB4A76128>
[2019-05-28_10:58:24]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:58:24]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:58:24]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:58:24]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001DAB4A76978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A38C0B5198>
[2019-05-28_10:58:26]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:58:26]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:58:26]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:58:26]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001A38C0B59E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AA04575198>
[2019-05-28_10:58:27]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:58:27]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:58:27]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:58:28]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001AA045759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029F6EE76128>
[2019-05-28_10:58:29]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:58:29]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:58:29]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:58:30]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000029F6EE76978>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002CFD4725198>
[2019-05-28_10:58:31]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:58:31]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:58:31]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:58:31]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002CFD47259E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020D91135198>
[2019-05-28_10:58:45]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:58:45]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:58:45]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:58:45]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000020D911359E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022BB6175198>
[2019-05-28_10:58:46]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:58:46]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:58:46]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:58:47]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000022BB61759E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002DC64865198>
[2019-05-28_10:58:48]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:58:48]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:58:48]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:58:49]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:58] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000002DC648659E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028EEB195198>
[2019-05-28_10:58:50]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:58:50]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:58:50]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:58:50]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Error loading averaged_perceptron_tagger: <urlopen error
[nltk_data]     [Errno 11001] getaddrinfo failed>
[nltk_data] Error loading stopwords: <urlopen error [Errno 11001]
[nltk_data]     getaddrinfo failed>
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
[28/05/2019 10:59] ERROR red <module> 635: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:red:Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "D:\dev\Python\Python36\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "D:\dev\Python\Python36\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 615, in <module>
    loop.run_until_complete(main(bot))
  File "D:\dev\Python\Python36\lib\asyncio\base_events.py", line 484, in run_until_complete
    return future.result()
  File "red.py", line 600, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x0000028EEB1959E8>
ERROR:asyncio:Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C06E2F5198>
[2019-05-28_10:59:04]----------Daily Post--------------------
Loading DailyPostBot settings
Saving DailyPostBot config
[2019-05-28_10:59:04]----------GIF Bot--------------------
Loading GIFBot ettings
Saving GIFBot config
[2019-05-28_10:59:04]----------Wallpaper--------------------
Loading WallpaperBot settings
Saving WallpaperBot config
Logging into Discord...
[2019-05-28_10:59:04]----------Chat Bot--------------------
trained.txt read: 1, not training chatbot

initializing dailybot scheduler
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\AZIERU\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
INFO:apscheduler.scheduler:Scheduler started

initializing wallpaper scheduler
INFO:apscheduler.scheduler:Scheduler started
Login successful. (3.125889ms)

-----------------
Red - Discord Bot
-----------------
Greedie_Bot#9528

Connected to:
2 servers
33 channels
12 users

Prefix: `
Owner: Greedy#2233
11/17 active cogs with 76 commands
-----------------

Use this url to bring your bot to a server:
https://discordapp.com/oauth2/authorize?client_id=335349901275824131&scope=bot

Official server: https://discord.gg/red
Make sure to keep your bot updated. Select the 'Update' option from the launcher.
